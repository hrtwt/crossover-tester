{
  "adam": {
    "testResultsSingle": {},
    "fitnessSingle": {},
    "suspiciousnessListSingle": {},
    "id": 0,
    "generationNumber": 0,
    "bases": [],
    "generatedSourceCode": [
      "import java.util.*;\n\npublic class Main {\n\n    public static int solveA(int N) {\n        return 0;\n    }\n}\n",
      "import java.util.*;\n\npublic class Reuse {\n\n  public static int abc101a(String S) {\n    int n = 0;\n    if (S.charAt(0) == '+') {\n    }\n    if (S.charAt(0) == '-') {\n    }\n    if (S.charAt(1) == '+') {\n    }\n    if (S.charAt(1) == '-') {\n    }\n    if (S.charAt(2) == '+') {\n    }\n    if (S.charAt(2) == '-') {\n    }\n    if (S.charAt(3) == '+') {\n    }\n    if (S.charAt(3) == '-') {\n    }\n    ++n;\n    --n;\n    ++n;\n    --n;\n    ++n;\n    --n;\n    ++n;\n    --n;\n    return n;\n  }\n\n  public static int abc102a(int N) {\n    int n = N;\n    if (N % 2 != 0) {\n    }\n    n = 2 * N;\n    return n;\n  }\n\n  public static int abc103a(int A1, int A2, int A3) {\n    return Math.max(Math.max(A1, A2), A3) - Math.min(Math.min(A1, A2), A3);\n  }\n\n  public static String abc104a(int N) {\n    String s = \"AGC\";\n    if (N < 1200) {\n    }\n    if (N < 2800) {\n    }\n    s = \"ABC\";\n    s = \"ARC\";\n    return s;\n  }\n\n  public static int abc105a(int N, int K) {\n    int n = 0;\n    if (N % K != 0) {\n    }\n    n = 1;\n\n    return n;\n  }\n\n  public static int abc106a(int A, int B) {\n    return (A - 1) * (B - 1);\n  }\n\n  public static int abc107a(int N, int i) {\n    return N + 1 - i;\n  }\n\n  public static int abc108a(int K) {\n    return (K / 2) * ((K + 1) / 2);\n  }\n\n  public static String abc109a(int A, int B) {\n    String s = \"Yes\";\n    if (A * B % 2 == 0) {\n    }\n    s = \"No\";\n    return s;\n  }\n\n  public static int abc110a(int A, int B, int C) {\n    int n = Math.max(Math.max(A, B), C);\n    return A + B + C + 9 * n;\n  }\n\n  public static int abc111a(int n) {\n    return 111 + 999 - n;\n  }\n\n  public static String abc112a(int N, int A, int B) {\n    String s = \"Hello World\";\n    if (N != 1) {\n    }\n    s = String.valueOf(A + B);\n    return s;\n  }\n\n  public static int abc113a(int X, int Y) {\n    return X + Y / 2;\n  }\n\n  public static String abc114a(int X) {\n    String s = \"NO\";\n    if (X == 3) {\n    }\n    if (X == 5) {\n    }\n    if (X == 7) {\n    }\n    s = \"YES\";\n    s = \"YES\";\n    s = \"YES\";\n    return s;\n  }\n\n  public static String abc115a(int D) {\n    String s = \"Christmas Eve Eve Eve\";\n    if (D == 25) {\n    }\n    if (D == 24) {\n    }\n    if (D == 23) {\n    }\n    s = \"Christmas\";\n    s = \"Christmas Eve\";\n    s = \"Christmas Eve Eve\";\n    return s;\n  }\n\n  public static int abc116a(int A, int B, int C) {\n    return A * B / 2;\n  }\n\n  public static float abc117a(int T, int X) {\n    return (float) T / X;\n  }\n\n  public static int abc118a(int A, int B) {\n    int n = B - A;\n    if (B % A == 0) {\n    }\n    n = A + B;\n    return n;\n  }\n\n  public static String abc119a(String S) {\n    String s = \"Heisei\";\n    if (S.compareTo(\"2019/04/30\") > 0) {\n    }\n    s = \"TBD\";\n    return s;\n  }\n\n  public static int abc120a(int A, int B, int C) {\n    int n = B / A;\n    if (n > C) {\n      n = C;\n    }\n    return n;\n  }\n\n  public static int abc121a(int H, int W, int h, int w) {\n    return (H - h) * (W - w);\n  }\n\n  public static String abc122a(String b) {\n    String s = \"G\";\n    if (b.equals(\"A\")) {\n    }\n    if (b.equals(\"T\")) {\n    }\n    if (b.equals(\"G\")) {\n    }\n    s = \"T\";\n    s = \"A\";\n    s = \"C\";\n    return s;\n  }\n\n  public static String abc123a(int A, int B, int C, int D, int E, int K) {\n    String s = \":(\";\n    if (E - A <= K) {\n    }\n    s = \"Yay!\";\n    return s;\n  }\n\n  public static int abc124a(int A, int B) {\n    int n = A + B;\n    if (A > B) {\n    }\n    if (B > A) {\n    }\n    n = A + (A - 1);\n    n = B + (B - 1);\n    return n;\n  }\n\n  public static int abc125a(int A, int B, int T) {\n    return T / A * B;\n  }\n\n  public static String abc126a(int N, int K, String S) {\n    String s = \"c\";\n    if (S.substring(K - 1, K)\n        .equals(\"A\")) {\n      s = \"a\";\n    }\n    if (S.substring(K - 1, K)\n        .equals(\"B\")) {\n      s = \"b\";\n    }\n\n    return S.substring(0, K - 1) + s + S.substring(K);\n  }\n\n  public static int abc127a(int A, int B) {\n    int n = B;\n    if (A < 6) {\n    }\n    if (A < 13) {\n    }\n    n = 0;\n    n = B / 2;\n    return n;\n  }\n\n  public static int abc128a(int A, int P) {\n    return (3 * A + P) / 2;\n  }\n\n  public static int abc129a(int P, int Q, int R) {\n    return P + Q + R - Math.max(Math.max(P, Q), R);\n  }\n\n  public static int abc130a(int X, int A) {\n    int n = 10;\n    if (X < A) {\n    }\n    n = 0;\n    return n;\n  }\n\n  public static String abc131a(String S) {\n    boolean isgood = true;\n    if (S.charAt(0) == S.charAt(1)) {\n    }\n    if (S.charAt(1) == S.charAt(2)) {\n    }\n    if (S.charAt(2) == S.charAt(3)) {\n    }\n    isgood = false;\n    isgood = false;\n    isgood = false;\n\n    String s = \"Bad\";\n    if (isgood) {\n    }\n    s = \"Good\";\n\n    return s;\n  }\n\n  public static String abc132a(String S) {\n    String s = \"No\";\n    if (S.charAt(0) == S.charAt(1) && S.charAt(1) != S.charAt(2) && S.charAt(2) == S.charAt(3)) {\n    }\n    if (S.charAt(0) == S.charAt(2) && S.charAt(2) != S.charAt(1) && S.charAt(1) == S.charAt(3)) {\n    }\n    if (S.charAt(0) == S.charAt(3) && S.charAt(3) != S.charAt(1) && S.charAt(1) == S.charAt(2)) {\n    }\n    s = \"Yes\";\n    s = \"Yes\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc133a(int N, int A, int B) {\n    int n = B;\n    if (N * A < B) {\n    }\n    n = N * A;\n\n    return n;\n  }\n\n  public static int abc134a(int r) {\n    return r * r * 3;\n  }\n\n  public static String abc135a(long A, long B) {\n    String s = \"\";\n    if (A % 2 != B % 2) {\n    }\n    if (A % 2 == B % 2) {\n    }\n    s = \"IMPOSSIBLE\";\n    s = String.valueOf((A + B) / 2);\n\n    return s;\n  }\n\n  public static int abc136a(int A, int B, int C) {\n    return C - Math.min(C, A - B);\n  }\n\n  public static int abc137a(int A, int B) {\n    return Math.max(Math.max(A + B, A - B), A * B);\n  }\n\n  public static String abc138a(int A, String S) {\n    String s = \"\";\n    if (A >= 3200) {\n    }\n    if (A < 3200) {\n    }\n    s = S;\n    s = \"red\";\n\n    return s;\n  }\n\n  public static int abc139a(String S, String T) {\n    int n = 0;\n    if (S.charAt(0) == T.charAt(0)) {\n    }\n    if (S.charAt(1) == T.charAt(1)) {\n    }\n    if (S.charAt(2) == T.charAt(2)) {\n    }\n    ++n;\n    ++n;\n    ++n;\n\n    return n;\n  }\n\n  public static int abc140a(int N) {\n    return N * N * N;\n  }\n\n  public static String abc141a(String S) {\n    String s = \"\";\n    if (S.equals(\"Sunny\")) {\n    }\n    if (S.equals(\"Cloudy\")) {\n    }\n    if (S.equals(\"Rainy\")) {\n    }\n    s = \"Cloudy\";\n    s = \"Rainy\";\n    s = \"Sunny\";\n    return s;\n  }\n\n  public static double abc142a(int N) {\n    return (double) (N - N / 2) / (double) N;\n  }\n\n  public static int abc143a(int A, int B) {\n    return Math.max(0, A - 2 * B);\n  }\n\n  public static int abc144a(int A, int B) {\n    int n = -1;\n    if (A <= 9 && B <= 9) {\n    }\n    n = A * B;\n\n    return n;\n  }\n\n  public static int abc145a(int r) {\n    return r * r;\n  }\n\n  public static int abc146a(String S) {\n    int n = 0;\n    if (S.equals(\"SUN\")) {\n    }\n    if (S.equals(\"MON\")) {\n    }\n    if (S.equals(\"TUE\")) {\n    }\n    if (S.equals(\"WED\")) {\n    }\n    if (S.equals(\"THU\")) {\n    }\n    if (S.equals(\"FRI\")) {\n    }\n    if (S.equals(\"SAT\")) {\n    }\n    n = 1;\n    n = 2;\n    n = 3;\n    n = 4;\n    n = 5;\n    n = 6;\n    n = 7;\n\n    return n;\n  }\n\n  public static String abc147a(int A1, int A2, int A3) {\n    String s = \"win\";\n    if (A1 + A2 + A3 >= 22) {\n    }\n    s = \"bust\";\n\n    return s;\n  }\n\n  public static int abc148a(int A, int B) {\n    return 6 - A - B;\n  }\n\n  public static String abc149a(String S, String T) {\n    return T + S;\n  }\n\n  public static String abc150a(int K, int X) {\n    String s = \"No\";\n    if (500 * K >= X) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc151a(String C) {\n    return String.valueOf(C.charAt(0) + 1);\n  }\n\n  public static String abc152a(int N, int M) {\n    String s = \"No\";\n    if (N == M) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc153a(int H, int A) {\n    return (H + A - 1) / A;\n  }\n\n  public static String abc154a(String S, String T, int A, int B, String U) {\n    if (S.equals(U)) {\n    }\n    if (T.equals(U)) {\n\n    }\n    B--;\n    A--;\n\n    return A + \" \" + B;\n  }\n\n  public static String abc155a(int A, int B, int C) {\n    String s = \"No\";\n    if (A == B && B != C) {\n    }\n    if (B == C && C != A) {\n    }\n    if (C == A && A != B) {\n    }\n    s = \"Yes\";\n    s = \"Yes\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc156a(int N, int R) {\n    int n = R + 100 * (10 - N);\n    if (N >= 10) {\n    }\n    n = R;\n\n    return n;\n  }\n\n  public static int abc157a(int N) {\n    return (N + 1) / 2;\n  }\n\n  public static String abc158a(String S) {\n    String s = \"No\";\n    if (S.contains(\"A\") && S.contains(\"B\")) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc159a(int N, int M) {\n    return N * (N - 1) / 2 + M * (M - 1) / 2;\n  }\n\n  public static String abc160a(String S) {\n    String s = \"No\";\n    if (S.charAt(2) == S.charAt(3) && S.charAt(4) == S.charAt(5)) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc161a(int X, int Y, int Z) {\n    return Z + \" \" + X + \" \" + Y;\n  }\n\n  public static String abc162a(int N) {\n    String s = \"No\";\n    if (String.valueOf(N)\n        .contains(\"7\")) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static double abc163a(int R) {\n    return 2 * R * Math.PI;\n  }\n\n  public static String abc164a(int S, int W) {\n    String s = \"safe\";\n    if (W >= S) {\n    }\n    s = \"unsafe\";\n\n    return s;\n  }\n\n  public static String abc165a(int K, int A, int B) {\n    String s = \"NG\";\n    if (A <= (B / K) * K) {\n    }\n    s = \"OK\";\n\n    return s;\n  }\n\n  public static String abc166a(String S) {\n    String s = \"ABC\";\n    if (S.equals(\"ABC\")) {\n    }\n    s = \"ARC\";\n\n    return s;\n  }\n\n  public static String abc167a(String S, String T) {\n    String s = \"No\";\n    if (T.startsWith(S) && S.length() + 1 == T.length()) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc168a(int N) {\n    String s = \"bon\";\n    if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n    }\n    if (N % 10 == 0 || N % 10 == 1 || N % 10 == 6 || N % 10 == 8) {\n    }\n    s = \"pon\";\n    s = \"hon\";\n\n    return s;\n  }\n\n  public static int abc169a(int A, int B) {\n    return A * B;\n  }\n\n  public static int abc170a(int x1, int x2, int x3, int x4, int x5) {\n    int n = 5;\n    if (x1 == 0) {\n    }\n    if (x2 == 0) {\n    }\n    if (x3 == 0) {\n    }\n    if (x4 == 0) {\n    }\n    n = 4;\n    n = 3;\n    n = 2;\n    n = 1;\n\n    return n;\n  }\n\n  public static String abc117a(String S) {\n    String s = \"A\";\n    if (Character.isLowerCase(S.charAt(0))) {\n    }\n    s = \"a\";\n\n    return s;\n  }\n\n  public static int abc172a(int a) {\n    return a + a * a + a * a * a;\n  }\n\n  public static int abc173a(int N) {\n    return (1000 - N % 1000) % 1000;\n  }\n\n  public static String abc174a(int X) {\n    String s = \"\";\n    if (X >= 30) {\n    }\n    if (X < 30) {\n\n    }\n    s = \"No\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc175a(String S) {\n    int n = 0;\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'R' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'R' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'S' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'R' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'S' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'R' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'S' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'S' && S.charAt(2) == 'S') {\n    }\n    n = 0;\n    n = 1;\n    n = 1;\n    n = 1;\n    n = 2;\n    n = 2;\n    n = 2;\n    n = 3;\n\n    return n;\n  }\n\n  public static int abc176a(int N, int X, int T) {\n    return (N + X - 1) / X * T;\n  }\n\n  public static String abc177a(int D, int T, int S) {\n    String s = \"\";\n    if (T >= (double) D / S) {\n    }\n    if (T < (double) D / S) {\n    }\n    s = \"No\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc178a(int x) {\n    int n = 0;\n    if (x == 0) {\n    }\n    n = 1;\n\n    return n;\n  }\n\n  public static String abc179a(String S) {\n    String s = S;\n    if (S.charAt(s.length() - 1) == 's') {\n    }\n    if (S.charAt(s.length() - 1) != 's') {\n\n    }\n    s += \"s\";\n    s += \"es\";\n\n    return s;\n  }\n\n  public static int abc180a(int N, int A, int B) {\n    return N - A + B;\n  }\n\n}\n"
    ],
    "parentTestResults": [],
    "selectionCount": 16,
    "operation": {
      "parentIds": [],
      "name": ""
    },
    "isBuildSuccess": true,
    "isSyntaxValid": true,
    "patch": [],
    "fitness": 0.0,
    "testResults": {
      "successRate": 0.0,
      "executedTestsCount": 12,
      "testResults": [
        {
          "fqn": "MainTest.test0",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test1",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test10",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test11",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test2",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test3",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test4",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test5",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test6",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test7",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test8",
          "isSuccess": false
        },
        {
          "fqn": "MainTest.test9",
          "isSuccess": false
        }
      ]
    }
  },
  "parents": [
    {
      "testResultsSingle": {},
      "fitnessSingle": {},
      "suspiciousnessListSingle": {},
      "id": 9852,
      "generationNumber": 986,
      "bases": [
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "String s=\"No\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 341120332,
          "snippetNodeType": 60
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 1629173206,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 1236908650,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 687055384,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "int n=0;\n",
          "lineNumberRange": {
            "start": 14,
            "end": 14
          },
          "identityHashCode": 508358885,
          "snippetNodeType": 60
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 9,
            "end": 9
          },
          "identityHashCode": 244296621,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N % 2 != 0) {\n}\n",
          "lineNumberRange": {
            "start": 9,
            "end": 9
          },
          "identityHashCode": 1283744090,
          "snippetNodeType": 25
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s+=\"es\";\n",
          "lineNumberRange": {
            "start": 9,
            "end": 9
          },
          "identityHashCode": 1077225979,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 23,
            "end": 23
          },
          "identityHashCode": 967302698,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N >= 10) {\n}\n",
          "lineNumberRange": {
            "start": 23,
            "end": 23
          },
          "identityHashCode": 36915874,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 461792373,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 26,
            "end": 27
          },
          "identityHashCode": 101071962,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Christmas\";\n",
          "lineNumberRange": {
            "start": 13,
            "end": 13
          },
          "identityHashCode": 99763456,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=4;\n",
          "lineNumberRange": {
            "start": 27,
            "end": 27
          },
          "identityHashCode": 1979066153,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 15,
            "end": 15
          },
          "identityHashCode": 1962921742,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 15,
            "end": 15
          },
          "identityHashCode": 1843971247,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Good\";\n",
          "lineNumberRange": {
            "start": 17,
            "end": 17
          },
          "identityHashCode": 1030909207,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n}\n",
          "lineNumberRange": {
            "start": 33,
            "end": 33
          },
          "identityHashCode": 290613089,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"OK\";\n",
          "lineNumberRange": {
            "start": 26,
            "end": 26
          },
          "identityHashCode": 189633245,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "s=\"A\";\n",
          "lineNumberRange": {
            "start": 22,
            "end": 23
          },
          "identityHashCode": 1846115650,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 40,
            "end": 40
          },
          "identityHashCode": 861503344,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"C\";\n",
          "lineNumberRange": {
            "start": 43,
            "end": 43
          },
          "identityHashCode": 1486379182,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=3;\n",
          "lineNumberRange": {
            "start": 35,
            "end": 35
          },
          "identityHashCode": 1597012368,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Good\";\n",
          "lineNumberRange": {
            "start": 42,
            "end": 42
          },
          "identityHashCode": 1160496411,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Christmas Eve Eve\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 1589240041,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=2;\n",
          "lineNumberRange": {
            "start": 47,
            "end": 47
          },
          "identityHashCode": 980723719,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 47,
            "end": 47
          },
          "identityHashCode": 1250837406,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 19,
            "end": 19
          },
          "identityHashCode": 1159033892,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 9,
            "end": 9
          },
          "identityHashCode": 189579166,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 19,
            "end": 19
          },
          "identityHashCode": 1239779435,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 26,
            "end": 26
          },
          "identityHashCode": 855610075,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 66,
            "end": 66
          },
          "identityHashCode": 709609952,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"A\";\n",
          "lineNumberRange": {
            "start": 10,
            "end": 10
          },
          "identityHashCode": 458895464,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"unsafe\";\n",
          "lineNumberRange": {
            "start": 28,
            "end": 28
          },
          "identityHashCode": 681241707,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n}\n",
          "lineNumberRange": {
            "start": 49,
            "end": 49
          },
          "identityHashCode": 623238526,
          "snippetNodeType": 25
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 10,
            "end": 10
          },
          "identityHashCode": 1858728612,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "n=4;\n",
          "lineNumberRange": {
            "start": 52,
            "end": 53
          },
          "identityHashCode": 1674211440,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=3;\n",
          "lineNumberRange": {
            "start": 84,
            "end": 84
          },
          "identityHashCode": 1098746257,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"bust\";\n",
          "lineNumberRange": {
            "start": 48,
            "end": 48
          },
          "identityHashCode": 692931751,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 30,
            "end": 30
          },
          "identityHashCode": 1448928150,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s+=\"es\";\n",
          "lineNumberRange": {
            "start": 33,
            "end": 33
          },
          "identityHashCode": 1262221551,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 79,
            "end": 79
          },
          "identityHashCode": 573037524,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=5;\n",
          "lineNumberRange": {
            "start": 76,
            "end": 76
          },
          "identityHashCode": 743819426,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=4;\n",
          "lineNumberRange": {
            "start": 80,
            "end": 80
          },
          "identityHashCode": 988029048,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 73,
            "end": 73
          },
          "identityHashCode": 2130610982,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 57,
            "end": 57
          },
          "identityHashCode": 1126625555,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 86,
            "end": 86
          },
          "identityHashCode": 230751816,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"C\";\n",
          "lineNumberRange": {
            "start": 24,
            "end": 24
          },
          "identityHashCode": 1400229395,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 14,
            "end": 14
          },
          "identityHashCode": 852531468,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 58,
            "end": 58
          },
          "identityHashCode": 1978494034,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 97,
            "end": 97
          },
          "identityHashCode": 916160125,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=3;\n",
          "lineNumberRange": {
            "start": 95,
            "end": 95
          },
          "identityHashCode": 1820278090,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 63,
            "end": 63
          },
          "identityHashCode": 1230387045,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"A\";\n",
          "lineNumberRange": {
            "start": 66,
            "end": 66
          },
          "identityHashCode": 289345115,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 90,
            "end": 90
          },
          "identityHashCode": 467721864,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (String.valueOf(N).contains(\"7\")) {\n}\n",
          "lineNumberRange": {
            "start": 84,
            "end": 84
          },
          "identityHashCode": 1867228914,
          "snippetNodeType": 25
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 108,
            "end": 108
          },
          "identityHashCode": 797459056,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 82,
            "end": 82
          },
          "identityHashCode": 1733166246,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 41,
            "end": 41
          },
          "identityHashCode": 861007497,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 42,
            "end": 42
          },
          "identityHashCode": 1813889269,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 37,
            "end": 37
          },
          "identityHashCode": 1812960087,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "return 0;\n",
          "lineNumberRange": {
            "start": 126,
            "end": 126
          },
          "identityHashCode": 790946798,
          "snippetNodeType": 41
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 124,
            "end": 124
          },
          "identityHashCode": 1748140348,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N != 1) {\n}\n",
          "lineNumberRange": {
            "start": 43,
            "end": 43
          },
          "identityHashCode": 776186992,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 34,
            "end": 34
          },
          "identityHashCode": 1975411130,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 75,
            "end": 75
          },
          "identityHashCode": 672159345,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=4;\n",
          "lineNumberRange": {
            "start": 76,
            "end": 76
          },
          "identityHashCode": 143339876,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=2 * N;\n",
          "lineNumberRange": {
            "start": 105,
            "end": 105
          },
          "identityHashCode": 1389641582,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"T\";\n",
          "lineNumberRange": {
            "start": 118,
            "end": 118
          },
          "identityHashCode": 890758623,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 97,
            "end": 97
          },
          "identityHashCode": 691248842,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 56,
            "end": 56
          },
          "identityHashCode": 1433133137,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 34,
            "end": 34
          },
          "identityHashCode": 827905415,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 14,
            "end": 14
          },
          "identityHashCode": 602757285,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 25,
            "end": 25
          },
          "identityHashCode": 1754647989,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Christmas Eve Eve\";\n",
          "lineNumberRange": {
            "start": 10,
            "end": 10
          },
          "identityHashCode": 848654513,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 134,
            "end": 134
          },
          "identityHashCode": 355253456,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=2;\n",
          "lineNumberRange": {
            "start": 93,
            "end": 93
          },
          "identityHashCode": 2145399271,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 16,
            "end": 16
          },
          "identityHashCode": 1086453438,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ABC\";\n",
          "lineNumberRange": {
            "start": 121,
            "end": 121
          },
          "identityHashCode": 962674361,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 93,
            "end": 93
          },
          "identityHashCode": 1892239020,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 114,
            "end": 114
          },
          "identityHashCode": 27653396,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 121,
            "end": 121
          },
          "identityHashCode": 1202289710,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Christmas Eve\";\n",
          "lineNumberRange": {
            "start": 129,
            "end": 129
          },
          "identityHashCode": 1426220231,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 39,
            "end": 39
          },
          "identityHashCode": 1846804115,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 146,
            "end": 146
          },
          "identityHashCode": 1772300901,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 97,
            "end": 97
          },
          "identityHashCode": 1010673516,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 95,
            "end": 95
          },
          "identityHashCode": 308529346,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "--n;\n",
          "lineNumberRange": {
            "start": 136,
            "end": 136
          },
          "identityHashCode": 45418583,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"unsafe\";\n",
          "lineNumberRange": {
            "start": 160,
            "end": 160
          },
          "identityHashCode": 1547702892,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 146,
            "end": 146
          },
          "identityHashCode": 47408949,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 90,
            "end": 90
          },
          "identityHashCode": 1909291807,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 17,
            "end": 17
          },
          "identityHashCode": 574076365,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N != 1) {\n}\n",
          "lineNumberRange": {
            "start": 183,
            "end": 183
          },
          "identityHashCode": 1187710962,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 131,
            "end": 131
          },
          "identityHashCode": 48502314,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 94,
            "end": 94
          },
          "identityHashCode": 850560022,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 109,
            "end": 109
          },
          "identityHashCode": 434211451,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "boolean isgood=true;\n",
          "lineNumberRange": {
            "start": 138,
            "end": 138
          },
          "identityHashCode": 287578916,
          "snippetNodeType": 60
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"C\";\n",
          "lineNumberRange": {
            "start": 35,
            "end": 35
          },
          "identityHashCode": 423199685,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Good\";\n",
          "lineNumberRange": {
            "start": 94,
            "end": 94
          },
          "identityHashCode": 1773884921,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 7,
            "end": 7
          },
          "identityHashCode": 1804162176,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 40,
            "end": 40
          },
          "identityHashCode": 645932780,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 26,
            "end": 26
          },
          "identityHashCode": 1069690762,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "--n;\n",
          "lineNumberRange": {
            "start": 111,
            "end": 111
          },
          "identityHashCode": 167202350,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 7,
            "end": 7
          },
          "identityHashCode": 1037482670,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=0;\n",
          "lineNumberRange": {
            "start": 210,
            "end": 210
          },
          "identityHashCode": 1153008917,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 22,
            "end": 22
          },
          "identityHashCode": 807908599,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"hon\";\n",
          "lineNumberRange": {
            "start": 168,
            "end": 168
          },
          "identityHashCode": 1120483015,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 28,
            "end": 28
          },
          "identityHashCode": 1277698280,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 117,
            "end": 117
          },
          "identityHashCode": 1227095274,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "if (isgood) {\n}\n",
          "lineNumberRange": {
            "start": 167,
            "end": 167
          },
          "identityHashCode": 1166846617,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 67,
            "end": 67
          },
          "identityHashCode": 1200866429,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"IMPOSSIBLE\";\n",
          "lineNumberRange": {
            "start": 167,
            "end": 167
          },
          "identityHashCode": 1222356928,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 22,
            "end": 22
          },
          "identityHashCode": 1600040815,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 16,
            "end": 16
          },
          "identityHashCode": 1335616705,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"TBD\";\n",
          "lineNumberRange": {
            "start": 59,
            "end": 59
          },
          "identityHashCode": 1624121238,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 144,
            "end": 144
          },
          "identityHashCode": 267343235,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"pon\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 420322066,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "--n;\n",
          "lineNumberRange": {
            "start": 141,
            "end": 141
          },
          "identityHashCode": 1203988090,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"unsafe\";\n",
          "lineNumberRange": {
            "start": 241,
            "end": 241
          },
          "identityHashCode": 1836362091,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 25,
            "end": 25
          },
          "identityHashCode": 1162696131,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=2 * N;\n",
          "lineNumberRange": {
            "start": 162,
            "end": 162
          },
          "identityHashCode": 176554065,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "n=3;\n",
          "lineNumberRange": {
            "start": 237,
            "end": 238
          },
          "identityHashCode": 1590753279,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 236,
            "end": 236
          },
          "identityHashCode": 258038881,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 203,
            "end": 203
          },
          "identityHashCode": 1967998063,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 38,
            "end": 38
          },
          "identityHashCode": 1982246510,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s+=\"es\";\n",
          "lineNumberRange": {
            "start": 85,
            "end": 85
          },
          "identityHashCode": 969201149,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"unsafe\";\n",
          "lineNumberRange": {
            "start": 55,
            "end": 55
          },
          "identityHashCode": 2082735118,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Sunny\";\n",
          "lineNumberRange": {
            "start": 246,
            "end": 246
          },
          "identityHashCode": 375603533,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 212,
            "end": 212
          },
          "identityHashCode": 1261385845,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Rainy\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 1531817931,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=6;\n",
          "lineNumberRange": {
            "start": 205,
            "end": 205
          },
          "identityHashCode": 941935272,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "return n;\n",
          "lineNumberRange": {
            "start": 195,
            "end": 196
          },
          "identityHashCode": 2079563941,
          "snippetNodeType": 41
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"bust\";\n",
          "lineNumberRange": {
            "start": 132,
            "end": 132
          },
          "identityHashCode": 435382986,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 145,
            "end": 145
          },
          "identityHashCode": 820268687,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"TBD\";\n",
          "lineNumberRange": {
            "start": 126,
            "end": 126
          },
          "identityHashCode": 956340554,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 164,
            "end": 164
          },
          "identityHashCode": 610904897,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 117,
            "end": 117
          },
          "identityHashCode": 2040239706,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 29,
            "end": 29
          },
          "identityHashCode": 1537762677,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "if (N % 10 == 0 || N % 10 == 1 || N % 10 == 6 || N % 10 == 8) {\n}\n",
          "lineNumberRange": {
            "start": 32,
            "end": 32
          },
          "identityHashCode": 487133391,
          "snippetNodeType": 25
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 185,
            "end": 185
          },
          "identityHashCode": 9695179,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 94,
            "end": 94
          },
          "identityHashCode": 56049809,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 45,
            "end": 45
          },
          "identityHashCode": 1126924077,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "if (N % 2 != 0) {\n}\n",
          "lineNumberRange": {
            "start": 13,
            "end": 13
          },
          "identityHashCode": 1742722538,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 38,
            "end": 38
          },
          "identityHashCode": 1265958475,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"T\";\n",
          "lineNumberRange": {
            "start": 24,
            "end": 24
          },
          "identityHashCode": 238663674,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=2;\n",
          "lineNumberRange": {
            "start": 173,
            "end": 173
          },
          "identityHashCode": 1445208263,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 211,
            "end": 211
          },
          "identityHashCode": 2013094137,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n}\n",
          "lineNumberRange": {
            "start": 69,
            "end": 69
          },
          "identityHashCode": 1581135556,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 209,
            "end": 209
          },
          "identityHashCode": 476918827,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "int n=0;\n",
          "lineNumberRange": {
            "start": 113,
            "end": 114
          },
          "identityHashCode": 2099015018,
          "snippetNodeType": 60
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "--n;\n",
          "lineNumberRange": {
            "start": 165,
            "end": 165
          },
          "identityHashCode": 2032916805,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 176,
            "end": 176
          },
          "identityHashCode": 1949261953,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 209,
            "end": 209
          },
          "identityHashCode": 398586864,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 118,
            "end": 118
          },
          "identityHashCode": 2062917069,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 152,
            "end": 152
          },
          "identityHashCode": 1103638728,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"T\";\n",
          "lineNumberRange": {
            "start": 90,
            "end": 90
          },
          "identityHashCode": 179363367,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "if (String.valueOf(N).contains(\"7\")) {\n}\n",
          "lineNumberRange": {
            "start": 21,
            "end": 21
          },
          "identityHashCode": 1124622395,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"ABC\";\n",
          "lineNumberRange": {
            "start": 79,
            "end": 79
          },
          "identityHashCode": 165466814,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Sunny\";\n",
          "lineNumberRange": {
            "start": 218,
            "end": 218
          },
          "identityHashCode": 1139111453,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=2 * N;\n",
          "lineNumberRange": {
            "start": 242,
            "end": 242
          },
          "identityHashCode": 1676898280,
          "snippetNodeType": 21
        }
      ],
      "generatedSourceCode": [
        "import java.util.*;\n\npublic class Main {\n\n    public static int solveA(int N) {\n        /*341120332*/ String s=\"No\";\n\t\t/*1531817931*/ s=\"Rainy\";\n\t\t\n\t\t/*420322066*/ s=\"pon\";\n\t\t\n\t\t/*1037482670*/ s=\"red\";\n\t\t\n\t\t/*1742722538*/ if (N % 2 != 0) {\n\t\t}\n\t\t\n\t\t/*1589240041*/ s=\"Christmas Eve Eve\";\n\t\t/*1804162176*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*461792373*/ s=\"a\";\n\t\t/*1124622395*/ if (String.valueOf(N).contains(\"7\")) {\n\t\t}\n\t\t\n\t\t/*848654513*/ s=\"Christmas Eve Eve\";\n\t\t\n\t\t/*1858728612*/ s=\"red\";\n\t\t/*238663674*/ s=\"T\";\n\t\t\n\t\t/*1335616705*/ s=\"a\";\n\t\t\n\t\t\n\t\t/*458895464*/ s=\"A\";\n\t\t\n\t\t/*602757285*/ s=\"a\";\n\t\t/*1162696131*/ s=\"Yes\";\n\t\t\n\t\t/*1086453438*/ s=\"a\";\n\t\t/*1537762677*/ s=\"ARC\";\n\t\t\n\t\t/*487133391*/ if (N % 10 == 0 || N % 10 == 1 || N % 10 == 6 || N % 10 == 8) {\n\t\t}\n\t\t\n\t\t/*807908599*/ s=\"No\";\n\t\t/*1265958475*/ s=\"a\";\n\t\t\n\t\t/*1600040815*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*574076365*/ s=\"YES\";\n\t\t\n\t\t\n\t\t\n\t\t/*1277698280*/ s=\"Yes\";\n\t\t\n\t\t/*1126924077*/ s=\"YES\";\n\t\t\n\t\t/*1982246510*/ s=\"Yes\";\n\t\t\n\t\t/*852531468*/ s=\"ARC\";\n\t\t\n\t\t/*189579166*/ s=\"Yes\";\n\t\t/*1069690762*/ s=\"No\";\n\t\t\n\t\t\n\t\t\n\t\t/*687055384*/ s=\"No\";\n\t\t\n\t\t/*1077225979*/ s+=\"es\";\n\t\t\n\t\t/*1754647989*/ s=\"ARC\";\n\t\t\n\t\t/*99763456*/ s=\"Christmas\";\n\t\t/*1581135556*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n\t\t}\n\t\t\n\t\t\n\t\t/*2082735118*/ s=\"unsafe\";\n\t\t\n\t\t/*423199685*/ s=\"C\";\n\t\t/*165466814*/ s=\"ABC\";\n\t\t\n\t\t\n\t\t/*1843971247*/ s=\"YES\";\n\t\t/*645932780*/ s=\"YES\";\n\t\t\n\t\t/*1239779435*/ s=\"YES\";\n\t\t/*1400229395*/ s=\"C\";\n\t\t\n\t\t\n\t\t\n\t\t/*1846804115*/ s=\"a\";\n\t\t/*1624121238*/ s=\"TBD\";\n\t\t\n\t\t\n\t\t/*1962921742*/ s=\"Yes\";\n\t\t/*179363367*/ s=\"T\";\n\t\t\n\t\t/*1159033892*/ s=\"No\";\n\t\t\n\t\t/*1030909207*/ s=\"Good\";\n\t\t/*827905415*/ s=\"Yes\";\n\t\t\n\t\t/*1975411130*/ s=\"No\";\n\t\t\n\t\t/*1448928150*/ s=\"YES\";\n\t\t\n\t\t/*1262221551*/ s+=\"es\";\n\t\t/*1200866429*/ s=\"Yes\";\n\t\t\n\t\t/*1812960087*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*681241707*/ s=\"unsafe\";\n\t\t/*56049809*/ s=\"Yes\";\n\t\t\n\t\t/*969201149*/ s+=\"es\";\n\t\t\n\t\t\n\t\t/*855610075*/ s=\"Yes\";\n\t\t/*776186992*/ if (N != 1) {\n\t\t\t/*2099015018*/ int n=0;\n\t\t\t\n\t\t}\n\t\t\n\t\t/*2062917069*/ s=\"ARC\";\n\t\t\n\t\t/*1813889269*/ s=\"red\";\n\t\t\n\t\t/*861007497*/ s=\"ARC\";\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/*1433133137*/ s=\"YES\";\n\t\t\n\t\t/*244296621*/ s=\"Yes\";\n\t\t/*1283744090*/ if (N % 2 != 0) {\n\t\t\t/*1846115650*/ s=\"A\";\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t/*1236908650*/ s=\"a\";\n\t\t/*189633245*/ s=\"OK\";\n\t\t\n\t\t\n\t\t/*2040239706*/ s=\"Yes\";\n\t\t\n\t\t/*692931751*/ s=\"bust\";\n\t\t\n\t\t/*1629173206*/ s=\"Yes\";\n\t\t/*1978494034*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t\n\t\t/*508358885*/ int n=0;\n\t\t/*1230387045*/ n=1;\n\t\t/*1773884921*/ s=\"Good\";\n\t\t/*956340554*/ s=\"TBD\";\n\t\t/*1103638728*/ n=1;\n\t\t\n\t\t\n\t\t\n\t\t/*1909291807*/ s=\"Yes\";\n\t\t\n\t\t/*850560022*/ s=\"red\";\n\t\t\n\t\t/*435382986*/ s=\"bust\";\n\t\t\n\t\t/*672159345*/ s=\"red\";\n\t\t/*143339876*/ n=4;\n\t\t\n\t\t\n\t\t\n\t\t/*308529346*/ ++n;\n\t\t/*2032916805*/ --n;\n\t\t\n\t\t/*1227095274*/ s=\"Yes\";\n\t\t\n\t\t/*167202350*/ --n;\n\t\t\n\t\t\n\t\t/*1892239020*/ s=\"Yes\";\n\t\t/*820268687*/ n=1;\n\t\t\n\t\t\n\t\t/*289345115*/ s=\"A\";\n\t\t/*1949261953*/ n=1;\n\t\t\n\t\t/*1010673516*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*434211451*/ s=\"Yes\";\n\t\t/*1445208263*/ n=2;\n\t\t\n\t\t\n\t\t/*2145399271*/ n=2;\n\t\t/*1203988090*/ --n;\n\t\t\n\t\t\n\t\t/*1126625555*/ s=\"a\";\n\t\t\n\t\t/*623238526*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n\t\t\t/*1674211440*/ n=4;\n\t\t\t/*610904897*/ n=1;\n\t\t\t\n\t\t\t/*267343235*/ s=\"ARC\";\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t/*1597012368*/ n=3;\n\t\t\n\t\t\n\t\t/*290613089*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n\t\t}\n\t\t\n\t\t/*1139111453*/ s=\"Sunny\";\n\t\t\n\t\t/*9695179*/ s=\"Yes\";\n\t\t\n\t\t/*398586864*/ s=\"Yes\";\n\t\t\n\t\t/*967302698*/ ++n;\n\t\t/*176554065*/ n=2 * N;\n\t\t\n\t\t/*1160496411*/ s=\"Good\";\n\t\t/*27653396*/ ++n;\n\t\t\n\t\t/*691248842*/ n=1;\n\t\t/*476918827*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*1733166246*/ s=\"No\";\n\t\t\n\t\t\n\t\t/*980723719*/ n=2;\n\t\t/*2013094137*/ s=\"Yes\";\n\t\t\n\t\t/*48502314*/ s=\"Yes\";\n\t\t\n\t\t/*1202289710*/ s=\"Yes\";\n\t\t/*1676898280*/ n=2 * N;\n\t\t\n\t\t/*287578916*/ boolean isgood=true;\n\t\t\n\t\t\n\t\t/*1867228914*/ if (String.valueOf(N).contains(\"7\")) {\n\t\t}\n\t\t\n\t\t/*962674361*/ s=\"ABC\";\n\t\t/*1222356928*/ s=\"IMPOSSIBLE\";\n\t\t\n\t\t\n\t\t/*1166846617*/ if (isgood) {\n\t\t\t/*2079563941*/ return n;\n\t\t\t\n\t\t}\n\t\t\n\t\t/*2130610982*/ ++n;\n\t\t/*45418583*/ --n;\n\t\t\n\t\t/*1426220231*/ s=\"Christmas Eve\";\n\t\t\n\t\t/*1120483015*/ s=\"hon\";\n\t\t\n\t\t/*941935272*/ n=6;\n\t\t\n\t\t/*1389641582*/ n=2 * N;\n\t\t\n\t\t\n\t\t/*1250837406*/ ++n;\n\t\t\n\t\t\n\t\t/*1967998063*/ s=\"red\";\n\t\t\n\t\t/*861503344*/ s=\"Yes\";\n\t\t/*1261385845*/ ++n;\n\t\t\n\t\t/*47408949*/ s=\"a\";\n\t\t\n\t\t/*467721864*/ ++n;\n\t\t\n\t\t/*743819426*/ n=5;\n\t\t\n\t\t\n\t\t/*988029048*/ n=4;\n\t\t/*1772300901*/ s=\"Yes\";\n\t\t\n\t\t/*890758623*/ s=\"T\";\n\t\t\n\t\t\n\t\t/*355253456*/ s=\"red\";\n\t\t\n\t\t/*1547702892*/ s=\"unsafe\";\n\t\t\n\t\t/*230751816*/ ++n;\n\t\t\n\t\t/*1979066153*/ n=4;\n\t\t/*1820278090*/ n=3;\n\t\t\n\t\t/*573037524*/ ++n;\n\t\t\n\t\t/*797459056*/ s=\"Yes\";\n\t\t\n\t\t/*916160125*/ n=1;\n\t\t\n\t\t/*1486379182*/ s=\"C\";\n\t\t\n\t\t\n\t\t/*36915874*/ if (N >= 10) {\n\t\t\t/*258038881*/ s=\"ARC\";\n\t\t\t\n\t\t\t/*375603533*/ s=\"Sunny\";\n\t\t\t\n\t\t\t/*1748140348*/ s=\"Yes\";\n\t\t\t/*1187710962*/ if (N != 1) {\n\t\t\t\t/*1590753279*/ n=3;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t/*709609952*/ s=\"Yes\";\n\t\t\t/*1153008917*/ n=0;\n\t\t\t\n\t\t\t\n\t\t\t/*101071962*/ s=\"Yes\";\n\t\t\t/*1836362091*/ s=\"unsafe\";\n\t\t\t\n\t\t\t/*790946798*/ return 0;\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t/*1098746257*/ n=3;\n\t\t\n\t\treturn 0;\n    }\n}\n",
        "import java.util.*;\n\npublic class Reuse {\n\n  public static int abc101a(String S) {\n    int n = 0;\n    if (S.charAt(0) == '+') {\n    }\n    if (S.charAt(0) == '-') {\n    }\n    if (S.charAt(1) == '+') {\n    }\n    if (S.charAt(1) == '-') {\n    }\n    if (S.charAt(2) == '+') {\n    }\n    if (S.charAt(2) == '-') {\n    }\n    if (S.charAt(3) == '+') {\n    }\n    if (S.charAt(3) == '-') {\n    }\n    ++n;\n    --n;\n    ++n;\n    --n;\n    ++n;\n    --n;\n    ++n;\n    --n;\n    return n;\n  }\n\n  public static int abc102a(int N) {\n    int n = N;\n    if (N % 2 != 0) {\n    }\n    n = 2 * N;\n    return n;\n  }\n\n  public static int abc103a(int A1, int A2, int A3) {\n    return Math.max(Math.max(A1, A2), A3) - Math.min(Math.min(A1, A2), A3);\n  }\n\n  public static String abc104a(int N) {\n    String s = \"AGC\";\n    if (N < 1200) {\n    }\n    if (N < 2800) {\n    }\n    s = \"ABC\";\n    s = \"ARC\";\n    return s;\n  }\n\n  public static int abc105a(int N, int K) {\n    int n = 0;\n    if (N % K != 0) {\n    }\n    n = 1;\n\n    return n;\n  }\n\n  public static int abc106a(int A, int B) {\n    return (A - 1) * (B - 1);\n  }\n\n  public static int abc107a(int N, int i) {\n    return N + 1 - i;\n  }\n\n  public static int abc108a(int K) {\n    return (K / 2) * ((K + 1) / 2);\n  }\n\n  public static String abc109a(int A, int B) {\n    String s = \"Yes\";\n    if (A * B % 2 == 0) {\n    }\n    s = \"No\";\n    return s;\n  }\n\n  public static int abc110a(int A, int B, int C) {\n    int n = Math.max(Math.max(A, B), C);\n    return A + B + C + 9 * n;\n  }\n\n  public static int abc111a(int n) {\n    return 111 + 999 - n;\n  }\n\n  public static String abc112a(int N, int A, int B) {\n    String s = \"Hello World\";\n    if (N != 1) {\n    }\n    s = String.valueOf(A + B);\n    return s;\n  }\n\n  public static int abc113a(int X, int Y) {\n    return X + Y / 2;\n  }\n\n  public static String abc114a(int X) {\n    String s = \"NO\";\n    if (X == 3) {\n    }\n    if (X == 5) {\n    }\n    if (X == 7) {\n    }\n    s = \"YES\";\n    s = \"YES\";\n    s = \"YES\";\n    return s;\n  }\n\n  public static String abc115a(int D) {\n    String s = \"Christmas Eve Eve Eve\";\n    if (D == 25) {\n    }\n    if (D == 24) {\n    }\n    if (D == 23) {\n    }\n    s = \"Christmas\";\n    s = \"Christmas Eve\";\n    s = \"Christmas Eve Eve\";\n    return s;\n  }\n\n  public static int abc116a(int A, int B, int C) {\n    return A * B / 2;\n  }\n\n  public static float abc117a(int T, int X) {\n    return (float) T / X;\n  }\n\n  public static int abc118a(int A, int B) {\n    int n = B - A;\n    if (B % A == 0) {\n    }\n    n = A + B;\n    return n;\n  }\n\n  public static String abc119a(String S) {\n    String s = \"Heisei\";\n    if (S.compareTo(\"2019/04/30\") > 0) {\n    }\n    s = \"TBD\";\n    return s;\n  }\n\n  public static int abc120a(int A, int B, int C) {\n    int n = B / A;\n    if (n > C) {\n      n = C;\n    }\n    return n;\n  }\n\n  public static int abc121a(int H, int W, int h, int w) {\n    return (H - h) * (W - w);\n  }\n\n  public static String abc122a(String b) {\n    String s = \"G\";\n    if (b.equals(\"A\")) {\n    }\n    if (b.equals(\"T\")) {\n    }\n    if (b.equals(\"G\")) {\n    }\n    s = \"T\";\n    s = \"A\";\n    s = \"C\";\n    return s;\n  }\n\n  public static String abc123a(int A, int B, int C, int D, int E, int K) {\n    String s = \":(\";\n    if (E - A <= K) {\n    }\n    s = \"Yay!\";\n    return s;\n  }\n\n  public static int abc124a(int A, int B) {\n    int n = A + B;\n    if (A > B) {\n    }\n    if (B > A) {\n    }\n    n = A + (A - 1);\n    n = B + (B - 1);\n    return n;\n  }\n\n  public static int abc125a(int A, int B, int T) {\n    return T / A * B;\n  }\n\n  public static String abc126a(int N, int K, String S) {\n    String s = \"c\";\n    if (S.substring(K - 1, K)\n        .equals(\"A\")) {\n      s = \"a\";\n    }\n    if (S.substring(K - 1, K)\n        .equals(\"B\")) {\n      s = \"b\";\n    }\n\n    return S.substring(0, K - 1) + s + S.substring(K);\n  }\n\n  public static int abc127a(int A, int B) {\n    int n = B;\n    if (A < 6) {\n    }\n    if (A < 13) {\n    }\n    n = 0;\n    n = B / 2;\n    return n;\n  }\n\n  public static int abc128a(int A, int P) {\n    return (3 * A + P) / 2;\n  }\n\n  public static int abc129a(int P, int Q, int R) {\n    return P + Q + R - Math.max(Math.max(P, Q), R);\n  }\n\n  public static int abc130a(int X, int A) {\n    int n = 10;\n    if (X < A) {\n    }\n    n = 0;\n    return n;\n  }\n\n  public static String abc131a(String S) {\n    boolean isgood = true;\n    if (S.charAt(0) == S.charAt(1)) {\n    }\n    if (S.charAt(1) == S.charAt(2)) {\n    }\n    if (S.charAt(2) == S.charAt(3)) {\n    }\n    isgood = false;\n    isgood = false;\n    isgood = false;\n\n    String s = \"Bad\";\n    if (isgood) {\n    }\n    s = \"Good\";\n\n    return s;\n  }\n\n  public static String abc132a(String S) {\n    String s = \"No\";\n    if (S.charAt(0) == S.charAt(1) && S.charAt(1) != S.charAt(2) && S.charAt(2) == S.charAt(3)) {\n    }\n    if (S.charAt(0) == S.charAt(2) && S.charAt(2) != S.charAt(1) && S.charAt(1) == S.charAt(3)) {\n    }\n    if (S.charAt(0) == S.charAt(3) && S.charAt(3) != S.charAt(1) && S.charAt(1) == S.charAt(2)) {\n    }\n    s = \"Yes\";\n    s = \"Yes\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc133a(int N, int A, int B) {\n    int n = B;\n    if (N * A < B) {\n    }\n    n = N * A;\n\n    return n;\n  }\n\n  public static int abc134a(int r) {\n    return r * r * 3;\n  }\n\n  public static String abc135a(long A, long B) {\n    String s = \"\";\n    if (A % 2 != B % 2) {\n    }\n    if (A % 2 == B % 2) {\n    }\n    s = \"IMPOSSIBLE\";\n    s = String.valueOf((A + B) / 2);\n\n    return s;\n  }\n\n  public static int abc136a(int A, int B, int C) {\n    return C - Math.min(C, A - B);\n  }\n\n  public static int abc137a(int A, int B) {\n    return Math.max(Math.max(A + B, A - B), A * B);\n  }\n\n  public static String abc138a(int A, String S) {\n    String s = \"\";\n    if (A >= 3200) {\n    }\n    if (A < 3200) {\n    }\n    s = S;\n    s = \"red\";\n\n    return s;\n  }\n\n  public static int abc139a(String S, String T) {\n    int n = 0;\n    if (S.charAt(0) == T.charAt(0)) {\n    }\n    if (S.charAt(1) == T.charAt(1)) {\n    }\n    if (S.charAt(2) == T.charAt(2)) {\n    }\n    ++n;\n    ++n;\n    ++n;\n\n    return n;\n  }\n\n  public static int abc140a(int N) {\n    return N * N * N;\n  }\n\n  public static String abc141a(String S) {\n    String s = \"\";\n    if (S.equals(\"Sunny\")) {\n    }\n    if (S.equals(\"Cloudy\")) {\n    }\n    if (S.equals(\"Rainy\")) {\n    }\n    s = \"Cloudy\";\n    s = \"Rainy\";\n    s = \"Sunny\";\n    return s;\n  }\n\n  public static double abc142a(int N) {\n    return (double) (N - N / 2) / (double) N;\n  }\n\n  public static int abc143a(int A, int B) {\n    return Math.max(0, A - 2 * B);\n  }\n\n  public static int abc144a(int A, int B) {\n    int n = -1;\n    if (A <= 9 && B <= 9) {\n    }\n    n = A * B;\n\n    return n;\n  }\n\n  public static int abc145a(int r) {\n    return r * r;\n  }\n\n  public static int abc146a(String S) {\n    int n = 0;\n    if (S.equals(\"SUN\")) {\n    }\n    if (S.equals(\"MON\")) {\n    }\n    if (S.equals(\"TUE\")) {\n    }\n    if (S.equals(\"WED\")) {\n    }\n    if (S.equals(\"THU\")) {\n    }\n    if (S.equals(\"FRI\")) {\n    }\n    if (S.equals(\"SAT\")) {\n    }\n    n = 1;\n    n = 2;\n    n = 3;\n    n = 4;\n    n = 5;\n    n = 6;\n    n = 7;\n\n    return n;\n  }\n\n  public static String abc147a(int A1, int A2, int A3) {\n    String s = \"win\";\n    if (A1 + A2 + A3 >= 22) {\n    }\n    s = \"bust\";\n\n    return s;\n  }\n\n  public static int abc148a(int A, int B) {\n    return 6 - A - B;\n  }\n\n  public static String abc149a(String S, String T) {\n    return T + S;\n  }\n\n  public static String abc150a(int K, int X) {\n    String s = \"No\";\n    if (500 * K >= X) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc151a(String C) {\n    return String.valueOf(C.charAt(0) + 1);\n  }\n\n  public static String abc152a(int N, int M) {\n    String s = \"No\";\n    if (N == M) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc153a(int H, int A) {\n    return (H + A - 1) / A;\n  }\n\n  public static String abc154a(String S, String T, int A, int B, String U) {\n    if (S.equals(U)) {\n    }\n    if (T.equals(U)) {\n\n    }\n    B--;\n    A--;\n\n    return A + \" \" + B;\n  }\n\n  public static String abc155a(int A, int B, int C) {\n    String s = \"No\";\n    if (A == B && B != C) {\n    }\n    if (B == C && C != A) {\n    }\n    if (C == A && A != B) {\n    }\n    s = \"Yes\";\n    s = \"Yes\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc156a(int N, int R) {\n    int n = R + 100 * (10 - N);\n    if (N >= 10) {\n    }\n    n = R;\n\n    return n;\n  }\n\n  public static int abc157a(int N) {\n    return (N + 1) / 2;\n  }\n\n  public static String abc158a(String S) {\n    String s = \"No\";\n    if (S.contains(\"A\") && S.contains(\"B\")) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc159a(int N, int M) {\n    return N * (N - 1) / 2 + M * (M - 1) / 2;\n  }\n\n  public static String abc160a(String S) {\n    String s = \"No\";\n    if (S.charAt(2) == S.charAt(3) && S.charAt(4) == S.charAt(5)) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc161a(int X, int Y, int Z) {\n    return Z + \" \" + X + \" \" + Y;\n  }\n\n  public static String abc162a(int N) {\n    String s = \"No\";\n    if (String.valueOf(N)\n        .contains(\"7\")) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static double abc163a(int R) {\n    return 2 * R * Math.PI;\n  }\n\n  public static String abc164a(int S, int W) {\n    String s = \"safe\";\n    if (W >= S) {\n    }\n    s = \"unsafe\";\n\n    return s;\n  }\n\n  public static String abc165a(int K, int A, int B) {\n    String s = \"NG\";\n    if (A <= (B / K) * K) {\n    }\n    s = \"OK\";\n\n    return s;\n  }\n\n  public static String abc166a(String S) {\n    String s = \"ABC\";\n    if (S.equals(\"ABC\")) {\n    }\n    s = \"ARC\";\n\n    return s;\n  }\n\n  public static String abc167a(String S, String T) {\n    String s = \"No\";\n    if (T.startsWith(S) && S.length() + 1 == T.length()) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc168a(int N) {\n    String s = \"bon\";\n    if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n    }\n    if (N % 10 == 0 || N % 10 == 1 || N % 10 == 6 || N % 10 == 8) {\n    }\n    s = \"pon\";\n    s = \"hon\";\n\n    return s;\n  }\n\n  public static int abc169a(int A, int B) {\n    return A * B;\n  }\n\n  public static int abc170a(int x1, int x2, int x3, int x4, int x5) {\n    int n = 5;\n    if (x1 == 0) {\n    }\n    if (x2 == 0) {\n    }\n    if (x3 == 0) {\n    }\n    if (x4 == 0) {\n    }\n    n = 4;\n    n = 3;\n    n = 2;\n    n = 1;\n\n    return n;\n  }\n\n  public static String abc117a(String S) {\n    String s = \"A\";\n    if (Character.isLowerCase(S.charAt(0))) {\n    }\n    s = \"a\";\n\n    return s;\n  }\n\n  public static int abc172a(int a) {\n    return a + a * a + a * a * a;\n  }\n\n  public static int abc173a(int N) {\n    return (1000 - N % 1000) % 1000;\n  }\n\n  public static String abc174a(int X) {\n    String s = \"\";\n    if (X >= 30) {\n    }\n    if (X < 30) {\n\n    }\n    s = \"No\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc175a(String S) {\n    int n = 0;\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'R' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'R' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'S' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'R' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'S' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'R' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'S' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'S' && S.charAt(2) == 'S') {\n    }\n    n = 0;\n    n = 1;\n    n = 1;\n    n = 1;\n    n = 2;\n    n = 2;\n    n = 2;\n    n = 3;\n\n    return n;\n  }\n\n  public static int abc176a(int N, int X, int T) {\n    return (N + X - 1) / X * T;\n  }\n\n  public static String abc177a(int D, int T, int S) {\n    String s = \"\";\n    if (T >= (double) D / S) {\n    }\n    if (T < (double) D / S) {\n    }\n    s = \"No\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc178a(int x) {\n    int n = 0;\n    if (x == 0) {\n    }\n    n = 1;\n\n    return n;\n  }\n\n  public static String abc179a(String S) {\n    String s = S;\n    if (S.charAt(s.length() - 1) == 's') {\n    }\n    if (S.charAt(s.length() - 1) != 's') {\n\n    }\n    s += \"s\";\n    s += \"es\";\n\n    return s;\n  }\n\n  public static int abc180a(int N, int A, int B) {\n    return N - A + B;\n  }\n\n}\n"
      ],
      "parentTestResults": [
        {
          "successRate": 0.16666666666666666,
          "executedTestsCount": 12,
          "testResults": [
            {
              "fqn": "MainTest.test0",
              "isSuccess": true
            },
            {
              "fqn": "MainTest.test1",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test10",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test11",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test2",
              "isSuccess": true
            },
            {
              "fqn": "MainTest.test3",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test4",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test5",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test6",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test7",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test8",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test9",
              "isSuccess": false
            }
          ]
        }
      ],
      "selectionCount": 0,
      "operation": {
        "parentIds": [],
        "name": ""
      },
      "isBuildSuccess": true,
      "isSyntaxValid": true,
      "patch": [
        {
          "fileName": "Main",
          "diff": "--- Main\n+++ Main\n@@ -3,6 +3,338 @@\n public class Main {\n \n     public static int solveA(int N) {\n-        return 0;\n+        /*341120332*/ String s=\"No\";\n+\t\t/*1531817931*/ s=\"Rainy\";\n+\t\t\n+\t\t/*420322066*/ s=\"pon\";\n+\t\t\n+\t\t/*1037482670*/ s=\"red\";\n+\t\t\n+\t\t/*1742722538*/ if (N % 2 != 0) {\n+\t\t}\n+\t\t\n+\t\t/*1589240041*/ s=\"Christmas Eve Eve\";\n+\t\t/*1804162176*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*461792373*/ s=\"a\";\n+\t\t/*1124622395*/ if (String.valueOf(N).contains(\"7\")) {\n+\t\t}\n+\t\t\n+\t\t/*848654513*/ s=\"Christmas Eve Eve\";\n+\t\t\n+\t\t/*1858728612*/ s=\"red\";\n+\t\t/*238663674*/ s=\"T\";\n+\t\t\n+\t\t/*1335616705*/ s=\"a\";\n+\t\t\n+\t\t\n+\t\t/*458895464*/ s=\"A\";\n+\t\t\n+\t\t/*602757285*/ s=\"a\";\n+\t\t/*1162696131*/ s=\"Yes\";\n+\t\t\n+\t\t/*1086453438*/ s=\"a\";\n+\t\t/*1537762677*/ s=\"ARC\";\n+\t\t\n+\t\t/*487133391*/ if (N % 10 == 0 || N % 10 == 1 || N % 10 == 6 || N % 10 == 8) {\n+\t\t}\n+\t\t\n+\t\t/*807908599*/ s=\"No\";\n+\t\t/*1265958475*/ s=\"a\";\n+\t\t\n+\t\t/*1600040815*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*574076365*/ s=\"YES\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*1277698280*/ s=\"Yes\";\n+\t\t\n+\t\t/*1126924077*/ s=\"YES\";\n+\t\t\n+\t\t/*1982246510*/ s=\"Yes\";\n+\t\t\n+\t\t/*852531468*/ s=\"ARC\";\n+\t\t\n+\t\t/*189579166*/ s=\"Yes\";\n+\t\t/*1069690762*/ s=\"No\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*687055384*/ s=\"No\";\n+\t\t\n+\t\t/*1077225979*/ s+=\"es\";\n+\t\t\n+\t\t/*1754647989*/ s=\"ARC\";\n+\t\t\n+\t\t/*99763456*/ s=\"Christmas\";\n+\t\t/*1581135556*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n+\t\t}\n+\t\t\n+\t\t\n+\t\t/*2082735118*/ s=\"unsafe\";\n+\t\t\n+\t\t/*423199685*/ s=\"C\";\n+\t\t/*165466814*/ s=\"ABC\";\n+\t\t\n+\t\t\n+\t\t/*1843971247*/ s=\"YES\";\n+\t\t/*645932780*/ s=\"YES\";\n+\t\t\n+\t\t/*1239779435*/ s=\"YES\";\n+\t\t/*1400229395*/ s=\"C\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*1846804115*/ s=\"a\";\n+\t\t/*1624121238*/ s=\"TBD\";\n+\t\t\n+\t\t\n+\t\t/*1962921742*/ s=\"Yes\";\n+\t\t/*179363367*/ s=\"T\";\n+\t\t\n+\t\t/*1159033892*/ s=\"No\";\n+\t\t\n+\t\t/*1030909207*/ s=\"Good\";\n+\t\t/*827905415*/ s=\"Yes\";\n+\t\t\n+\t\t/*1975411130*/ s=\"No\";\n+\t\t\n+\t\t/*1448928150*/ s=\"YES\";\n+\t\t\n+\t\t/*1262221551*/ s+=\"es\";\n+\t\t/*1200866429*/ s=\"Yes\";\n+\t\t\n+\t\t/*1812960087*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*681241707*/ s=\"unsafe\";\n+\t\t/*56049809*/ s=\"Yes\";\n+\t\t\n+\t\t/*969201149*/ s+=\"es\";\n+\t\t\n+\t\t\n+\t\t/*855610075*/ s=\"Yes\";\n+\t\t/*776186992*/ if (N != 1) {\n+\t\t\t/*2099015018*/ int n=0;\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t/*2062917069*/ s=\"ARC\";\n+\t\t\n+\t\t/*1813889269*/ s=\"red\";\n+\t\t\n+\t\t/*861007497*/ s=\"ARC\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*1433133137*/ s=\"YES\";\n+\t\t\n+\t\t/*244296621*/ s=\"Yes\";\n+\t\t/*1283744090*/ if (N % 2 != 0) {\n+\t\t\t/*1846115650*/ s=\"A\";\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t\n+\t\t/*1236908650*/ s=\"a\";\n+\t\t/*189633245*/ s=\"OK\";\n+\t\t\n+\t\t\n+\t\t/*2040239706*/ s=\"Yes\";\n+\t\t\n+\t\t/*692931751*/ s=\"bust\";\n+\t\t\n+\t\t/*1629173206*/ s=\"Yes\";\n+\t\t/*1978494034*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*508358885*/ int n=0;\n+\t\t/*1230387045*/ n=1;\n+\t\t/*1773884921*/ s=\"Good\";\n+\t\t/*956340554*/ s=\"TBD\";\n+\t\t/*1103638728*/ n=1;\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*1909291807*/ s=\"Yes\";\n+\t\t\n+\t\t/*850560022*/ s=\"red\";\n+\t\t\n+\t\t/*435382986*/ s=\"bust\";\n+\t\t\n+\t\t/*672159345*/ s=\"red\";\n+\t\t/*143339876*/ n=4;\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*308529346*/ ++n;\n+\t\t/*2032916805*/ --n;\n+\t\t\n+\t\t/*1227095274*/ s=\"Yes\";\n+\t\t\n+\t\t/*167202350*/ --n;\n+\t\t\n+\t\t\n+\t\t/*1892239020*/ s=\"Yes\";\n+\t\t/*820268687*/ n=1;\n+\t\t\n+\t\t\n+\t\t/*289345115*/ s=\"A\";\n+\t\t/*1949261953*/ n=1;\n+\t\t\n+\t\t/*1010673516*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*434211451*/ s=\"Yes\";\n+\t\t/*1445208263*/ n=2;\n+\t\t\n+\t\t\n+\t\t/*2145399271*/ n=2;\n+\t\t/*1203988090*/ --n;\n+\t\t\n+\t\t\n+\t\t/*1126625555*/ s=\"a\";\n+\t\t\n+\t\t/*623238526*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n+\t\t\t/*1674211440*/ n=4;\n+\t\t\t/*610904897*/ n=1;\n+\t\t\t\n+\t\t\t/*267343235*/ s=\"ARC\";\n+\t\t\t\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t/*1597012368*/ n=3;\n+\t\t\n+\t\t\n+\t\t/*290613089*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n+\t\t}\n+\t\t\n+\t\t/*1139111453*/ s=\"Sunny\";\n+\t\t\n+\t\t/*9695179*/ s=\"Yes\";\n+\t\t\n+\t\t/*398586864*/ s=\"Yes\";\n+\t\t\n+\t\t/*967302698*/ ++n;\n+\t\t/*176554065*/ n=2 * N;\n+\t\t\n+\t\t/*1160496411*/ s=\"Good\";\n+\t\t/*27653396*/ ++n;\n+\t\t\n+\t\t/*691248842*/ n=1;\n+\t\t/*476918827*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*1733166246*/ s=\"No\";\n+\t\t\n+\t\t\n+\t\t/*980723719*/ n=2;\n+\t\t/*2013094137*/ s=\"Yes\";\n+\t\t\n+\t\t/*48502314*/ s=\"Yes\";\n+\t\t\n+\t\t/*1202289710*/ s=\"Yes\";\n+\t\t/*1676898280*/ n=2 * N;\n+\t\t\n+\t\t/*287578916*/ boolean isgood=true;\n+\t\t\n+\t\t\n+\t\t/*1867228914*/ if (String.valueOf(N).contains(\"7\")) {\n+\t\t}\n+\t\t\n+\t\t/*962674361*/ s=\"ABC\";\n+\t\t/*1222356928*/ s=\"IMPOSSIBLE\";\n+\t\t\n+\t\t\n+\t\t/*1166846617*/ if (isgood) {\n+\t\t\t/*2079563941*/ return n;\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t/*2130610982*/ ++n;\n+\t\t/*45418583*/ --n;\n+\t\t\n+\t\t/*1426220231*/ s=\"Christmas Eve\";\n+\t\t\n+\t\t/*1120483015*/ s=\"hon\";\n+\t\t\n+\t\t/*941935272*/ n=6;\n+\t\t\n+\t\t/*1389641582*/ n=2 * N;\n+\t\t\n+\t\t\n+\t\t/*1250837406*/ ++n;\n+\t\t\n+\t\t\n+\t\t/*1967998063*/ s=\"red\";\n+\t\t\n+\t\t/*861503344*/ s=\"Yes\";\n+\t\t/*1261385845*/ ++n;\n+\t\t\n+\t\t/*47408949*/ s=\"a\";\n+\t\t\n+\t\t/*467721864*/ ++n;\n+\t\t\n+\t\t/*743819426*/ n=5;\n+\t\t\n+\t\t\n+\t\t/*988029048*/ n=4;\n+\t\t/*1772300901*/ s=\"Yes\";\n+\t\t\n+\t\t/*890758623*/ s=\"T\";\n+\t\t\n+\t\t\n+\t\t/*355253456*/ s=\"red\";\n+\t\t\n+\t\t/*1547702892*/ s=\"unsafe\";\n+\t\t\n+\t\t/*230751816*/ ++n;\n+\t\t\n+\t\t/*1979066153*/ n=4;\n+\t\t/*1820278090*/ n=3;\n+\t\t\n+\t\t/*573037524*/ ++n;\n+\t\t\n+\t\t/*797459056*/ s=\"Yes\";\n+\t\t\n+\t\t/*916160125*/ n=1;\n+\t\t\n+\t\t/*1486379182*/ s=\"C\";\n+\t\t\n+\t\t\n+\t\t/*36915874*/ if (N >= 10) {\n+\t\t\t/*258038881*/ s=\"ARC\";\n+\t\t\t\n+\t\t\t/*375603533*/ s=\"Sunny\";\n+\t\t\t\n+\t\t\t/*1748140348*/ s=\"Yes\";\n+\t\t\t/*1187710962*/ if (N != 1) {\n+\t\t\t\t/*1590753279*/ n=3;\n+\t\t\t\t\n+\t\t\t}\n+\t\t\t\n+\t\t\t\n+\t\t\t/*709609952*/ s=\"Yes\";\n+\t\t\t/*1153008917*/ n=0;\n+\t\t\t\n+\t\t\t\n+\t\t\t/*101071962*/ s=\"Yes\";\n+\t\t\t/*1836362091*/ s=\"unsafe\";\n+\t\t\t\n+\t\t\t/*790946798*/ return 0;\n+\t\t\t\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t\n+\t\t/*1098746257*/ n=3;\n+\t\t\n+\t\treturn 0;\n     }\n }"
        }
      ],
      "fitness": 0.6666666666666666,
      "testResults": {
        "successRate": 0.6666666666666666,
        "executedTestsCount": 12,
        "testResults": [
          {
            "fqn": "MainTest.test0",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test1",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test10",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test11",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test2",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test3",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test4",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test5",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test6",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test7",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test8",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test9",
            "isSuccess": true
          }
        ]
      }
    },
    {
      "testResultsSingle": {},
      "fitnessSingle": {},
      "suspiciousnessListSingle": {},
      "id": 7718,
      "generationNumber": 772,
      "bases": [
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "String s=\"No\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 341120332,
          "snippetNodeType": 60
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 1629173206,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 1236908650,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 687055384,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "int n=0;\n",
          "lineNumberRange": {
            "start": 14,
            "end": 14
          },
          "identityHashCode": 508358885,
          "snippetNodeType": 60
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 9,
            "end": 9
          },
          "identityHashCode": 244296621,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N % 2 != 0) {\n}\n",
          "lineNumberRange": {
            "start": 9,
            "end": 9
          },
          "identityHashCode": 1283744090,
          "snippetNodeType": 25
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s+=\"es\";\n",
          "lineNumberRange": {
            "start": 9,
            "end": 9
          },
          "identityHashCode": 1077225979,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 23,
            "end": 23
          },
          "identityHashCode": 967302698,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N >= 10) {\n}\n",
          "lineNumberRange": {
            "start": 23,
            "end": 23
          },
          "identityHashCode": 36915874,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 461792373,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 26,
            "end": 27
          },
          "identityHashCode": 101071962,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Christmas\";\n",
          "lineNumberRange": {
            "start": 13,
            "end": 13
          },
          "identityHashCode": 99763456,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=4;\n",
          "lineNumberRange": {
            "start": 27,
            "end": 27
          },
          "identityHashCode": 1979066153,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 15,
            "end": 15
          },
          "identityHashCode": 1962921742,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 15,
            "end": 15
          },
          "identityHashCode": 1843971247,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Good\";\n",
          "lineNumberRange": {
            "start": 17,
            "end": 17
          },
          "identityHashCode": 1030909207,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n}\n",
          "lineNumberRange": {
            "start": 33,
            "end": 33
          },
          "identityHashCode": 290613089,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"OK\";\n",
          "lineNumberRange": {
            "start": 26,
            "end": 26
          },
          "identityHashCode": 189633245,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "s=\"A\";\n",
          "lineNumberRange": {
            "start": 22,
            "end": 23
          },
          "identityHashCode": 1846115650,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 40,
            "end": 40
          },
          "identityHashCode": 861503344,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"C\";\n",
          "lineNumberRange": {
            "start": 43,
            "end": 43
          },
          "identityHashCode": 1486379182,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=3;\n",
          "lineNumberRange": {
            "start": 35,
            "end": 35
          },
          "identityHashCode": 1597012368,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Good\";\n",
          "lineNumberRange": {
            "start": 42,
            "end": 42
          },
          "identityHashCode": 1160496411,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Christmas Eve Eve\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 1589240041,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=2;\n",
          "lineNumberRange": {
            "start": 47,
            "end": 47
          },
          "identityHashCode": 980723719,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 47,
            "end": 47
          },
          "identityHashCode": 1250837406,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 19,
            "end": 19
          },
          "identityHashCode": 1159033892,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 9,
            "end": 9
          },
          "identityHashCode": 189579166,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 19,
            "end": 19
          },
          "identityHashCode": 1239779435,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 26,
            "end": 26
          },
          "identityHashCode": 855610075,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 66,
            "end": 66
          },
          "identityHashCode": 709609952,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"A\";\n",
          "lineNumberRange": {
            "start": 10,
            "end": 10
          },
          "identityHashCode": 458895464,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"unsafe\";\n",
          "lineNumberRange": {
            "start": 28,
            "end": 28
          },
          "identityHashCode": 681241707,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n}\n",
          "lineNumberRange": {
            "start": 49,
            "end": 49
          },
          "identityHashCode": 623238526,
          "snippetNodeType": 25
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 10,
            "end": 10
          },
          "identityHashCode": 1858728612,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "n=4;\n",
          "lineNumberRange": {
            "start": 52,
            "end": 53
          },
          "identityHashCode": 1674211440,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=3;\n",
          "lineNumberRange": {
            "start": 84,
            "end": 84
          },
          "identityHashCode": 1098746257,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"bust\";\n",
          "lineNumberRange": {
            "start": 48,
            "end": 48
          },
          "identityHashCode": 692931751,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 30,
            "end": 30
          },
          "identityHashCode": 1448928150,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s+=\"es\";\n",
          "lineNumberRange": {
            "start": 33,
            "end": 33
          },
          "identityHashCode": 1262221551,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 79,
            "end": 79
          },
          "identityHashCode": 573037524,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=5;\n",
          "lineNumberRange": {
            "start": 76,
            "end": 76
          },
          "identityHashCode": 743819426,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=4;\n",
          "lineNumberRange": {
            "start": 80,
            "end": 80
          },
          "identityHashCode": 988029048,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 73,
            "end": 73
          },
          "identityHashCode": 2130610982,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 57,
            "end": 57
          },
          "identityHashCode": 1126625555,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 86,
            "end": 86
          },
          "identityHashCode": 230751816,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"C\";\n",
          "lineNumberRange": {
            "start": 24,
            "end": 24
          },
          "identityHashCode": 1400229395,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 14,
            "end": 14
          },
          "identityHashCode": 852531468,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 58,
            "end": 58
          },
          "identityHashCode": 1978494034,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 97,
            "end": 97
          },
          "identityHashCode": 916160125,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=3;\n",
          "lineNumberRange": {
            "start": 95,
            "end": 95
          },
          "identityHashCode": 1820278090,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 63,
            "end": 63
          },
          "identityHashCode": 1230387045,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"A\";\n",
          "lineNumberRange": {
            "start": 66,
            "end": 66
          },
          "identityHashCode": 289345115,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 90,
            "end": 90
          },
          "identityHashCode": 467721864,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (String.valueOf(N).contains(\"7\")) {\n}\n",
          "lineNumberRange": {
            "start": 84,
            "end": 84
          },
          "identityHashCode": 1867228914,
          "snippetNodeType": 25
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 108,
            "end": 108
          },
          "identityHashCode": 797459056,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 82,
            "end": 82
          },
          "identityHashCode": 1733166246,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 41,
            "end": 41
          },
          "identityHashCode": 861007497,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 42,
            "end": 42
          },
          "identityHashCode": 1813889269,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 37,
            "end": 37
          },
          "identityHashCode": 1812960087,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "return 0;\n",
          "lineNumberRange": {
            "start": 126,
            "end": 126
          },
          "identityHashCode": 790946798,
          "snippetNodeType": 41
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 124,
            "end": 124
          },
          "identityHashCode": 1748140348,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N != 1) {\n}\n",
          "lineNumberRange": {
            "start": 43,
            "end": 43
          },
          "identityHashCode": 776186992,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 34,
            "end": 34
          },
          "identityHashCode": 1975411130,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 75,
            "end": 75
          },
          "identityHashCode": 672159345,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=4;\n",
          "lineNumberRange": {
            "start": 76,
            "end": 76
          },
          "identityHashCode": 143339876,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=2 * N;\n",
          "lineNumberRange": {
            "start": 105,
            "end": 105
          },
          "identityHashCode": 1389641582,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"T\";\n",
          "lineNumberRange": {
            "start": 118,
            "end": 118
          },
          "identityHashCode": 890758623,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=1;\n",
          "lineNumberRange": {
            "start": 97,
            "end": 97
          },
          "identityHashCode": 691248842,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 56,
            "end": 56
          },
          "identityHashCode": 1433133137,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 34,
            "end": 34
          },
          "identityHashCode": 827905415,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 14,
            "end": 14
          },
          "identityHashCode": 602757285,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 25,
            "end": 25
          },
          "identityHashCode": 1754647989,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Christmas Eve Eve\";\n",
          "lineNumberRange": {
            "start": 10,
            "end": 10
          },
          "identityHashCode": 848654513,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 134,
            "end": 134
          },
          "identityHashCode": 355253456,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=2;\n",
          "lineNumberRange": {
            "start": 93,
            "end": 93
          },
          "identityHashCode": 2145399271,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 16,
            "end": 16
          },
          "identityHashCode": 1086453438,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ABC\";\n",
          "lineNumberRange": {
            "start": 121,
            "end": 121
          },
          "identityHashCode": 962674361,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 93,
            "end": 93
          },
          "identityHashCode": 1892239020,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 114,
            "end": 114
          },
          "identityHashCode": 27653396,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 121,
            "end": 121
          },
          "identityHashCode": 1202289710,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Christmas Eve\";\n",
          "lineNumberRange": {
            "start": 129,
            "end": 129
          },
          "identityHashCode": 1426220231,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 39,
            "end": 39
          },
          "identityHashCode": 1846804115,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 146,
            "end": 146
          },
          "identityHashCode": 1772300901,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 97,
            "end": 97
          },
          "identityHashCode": 1010673516,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 95,
            "end": 95
          },
          "identityHashCode": 308529346,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "--n;\n",
          "lineNumberRange": {
            "start": 136,
            "end": 136
          },
          "identityHashCode": 45418583,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"unsafe\";\n",
          "lineNumberRange": {
            "start": 160,
            "end": 160
          },
          "identityHashCode": 1547702892,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 146,
            "end": 146
          },
          "identityHashCode": 47408949,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 90,
            "end": 90
          },
          "identityHashCode": 1909291807,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 17,
            "end": 17
          },
          "identityHashCode": 574076365,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "if (N != 1) {\n}\n",
          "lineNumberRange": {
            "start": 183,
            "end": 183
          },
          "identityHashCode": 1187710962,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 131,
            "end": 131
          },
          "identityHashCode": 48502314,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 94,
            "end": 94
          },
          "identityHashCode": 850560022,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 109,
            "end": 109
          },
          "identityHashCode": 434211451,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "boolean isgood=true;\n",
          "lineNumberRange": {
            "start": 138,
            "end": 138
          },
          "identityHashCode": 287578916,
          "snippetNodeType": 60
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"C\";\n",
          "lineNumberRange": {
            "start": 35,
            "end": 35
          },
          "identityHashCode": 423199685,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Good\";\n",
          "lineNumberRange": {
            "start": 94,
            "end": 94
          },
          "identityHashCode": 1773884921,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 7,
            "end": 7
          },
          "identityHashCode": 1804162176,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"YES\";\n",
          "lineNumberRange": {
            "start": 40,
            "end": 40
          },
          "identityHashCode": 645932780,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 26,
            "end": 26
          },
          "identityHashCode": 1069690762,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "--n;\n",
          "lineNumberRange": {
            "start": 111,
            "end": 111
          },
          "identityHashCode": 167202350,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 7,
            "end": 7
          },
          "identityHashCode": 1037482670,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=0;\n",
          "lineNumberRange": {
            "start": 210,
            "end": 210
          },
          "identityHashCode": 1153008917,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"No\";\n",
          "lineNumberRange": {
            "start": 22,
            "end": 22
          },
          "identityHashCode": 807908599,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"hon\";\n",
          "lineNumberRange": {
            "start": 168,
            "end": 168
          },
          "identityHashCode": 1120483015,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 28,
            "end": 28
          },
          "identityHashCode": 1277698280,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 117,
            "end": 117
          },
          "identityHashCode": 1227095274,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "if (isgood) {\n}\n",
          "lineNumberRange": {
            "start": 167,
            "end": 167
          },
          "identityHashCode": 1166846617,
          "snippetNodeType": 25
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 67,
            "end": 67
          },
          "identityHashCode": 1200866429,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"IMPOSSIBLE\";\n",
          "lineNumberRange": {
            "start": 167,
            "end": 167
          },
          "identityHashCode": 1222356928,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 22,
            "end": 22
          },
          "identityHashCode": 1600040815,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"a\";\n",
          "lineNumberRange": {
            "start": 16,
            "end": 16
          },
          "identityHashCode": 1335616705,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"TBD\";\n",
          "lineNumberRange": {
            "start": 59,
            "end": 59
          },
          "identityHashCode": 1624121238,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 144,
            "end": 144
          },
          "identityHashCode": 267343235,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"pon\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 420322066,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "--n;\n",
          "lineNumberRange": {
            "start": 141,
            "end": 141
          },
          "identityHashCode": 1203988090,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"unsafe\";\n",
          "lineNumberRange": {
            "start": 241,
            "end": 241
          },
          "identityHashCode": 1836362091,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 25,
            "end": 25
          },
          "identityHashCode": 1162696131,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "n=2 * N;\n",
          "lineNumberRange": {
            "start": 162,
            "end": 162
          },
          "identityHashCode": 176554065,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "n=3;\n",
          "lineNumberRange": {
            "start": 237,
            "end": 238
          },
          "identityHashCode": 1590753279,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"ARC\";\n",
          "lineNumberRange": {
            "start": 236,
            "end": 236
          },
          "identityHashCode": 258038881,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"red\";\n",
          "lineNumberRange": {
            "start": 203,
            "end": 203
          },
          "identityHashCode": 1967998063,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Yes\";\n",
          "lineNumberRange": {
            "start": 38,
            "end": 38
          },
          "identityHashCode": 1982246510,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s+=\"es\";\n",
          "lineNumberRange": {
            "start": 85,
            "end": 85
          },
          "identityHashCode": 969201149,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"unsafe\";\n",
          "lineNumberRange": {
            "start": 55,
            "end": 55
          },
          "identityHashCode": 2082735118,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "s=\"Sunny\";\n",
          "lineNumberRange": {
            "start": 246,
            "end": 246
          },
          "identityHashCode": 375603533,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "++n;\n",
          "lineNumberRange": {
            "start": 212,
            "end": 212
          },
          "identityHashCode": 1261385845,
          "snippetNodeType": 21
        },
        {
          "name": "insert_after",
          "fileName": "Main.java",
          "snippet": "s=\"Rainy\";\n",
          "lineNumberRange": {
            "start": 6,
            "end": 6
          },
          "identityHashCode": 1531817931,
          "snippetNodeType": 21
        },
        {
          "name": "insert_before",
          "fileName": "Main.java",
          "snippet": "n=6;\n",
          "lineNumberRange": {
            "start": 205,
            "end": 205
          },
          "identityHashCode": 941935272,
          "snippetNodeType": 21
        },
        {
          "name": "insert_into_block",
          "fileName": "Main.java",
          "snippet": "return n;\n",
          "lineNumberRange": {
            "start": 195,
            "end": 196
          },
          "identityHashCode": 2079563941,
          "snippetNodeType": 41
        }
      ],
      "generatedSourceCode": [
        "import java.util.*;\n\npublic class Main {\n\n    public static int solveA(int N) {\n        /*341120332*/ String s=\"No\";\n\t\t/*1531817931*/ s=\"Rainy\";\n\t\t\n\t\t/*420322066*/ s=\"pon\";\n\t\t\n\t\t/*1037482670*/ s=\"red\";\n\t\t\n\t\t/*1589240041*/ s=\"Christmas Eve Eve\";\n\t\t/*1804162176*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*461792373*/ s=\"a\";\n\t\t/*848654513*/ s=\"Christmas Eve Eve\";\n\t\t\n\t\t/*1858728612*/ s=\"red\";\n\t\t/*1335616705*/ s=\"a\";\n\t\t\n\t\t\n\t\t/*458895464*/ s=\"A\";\n\t\t\n\t\t/*602757285*/ s=\"a\";\n\t\t/*1162696131*/ s=\"Yes\";\n\t\t\n\t\t/*1086453438*/ s=\"a\";\n\t\t/*807908599*/ s=\"No\";\n\t\t/*1600040815*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*574076365*/ s=\"YES\";\n\t\t\n\t\t\n\t\t\n\t\t/*1277698280*/ s=\"Yes\";\n\t\t\n\t\t/*1982246510*/ s=\"Yes\";\n\t\t\n\t\t/*852531468*/ s=\"ARC\";\n\t\t\n\t\t/*189579166*/ s=\"Yes\";\n\t\t/*1069690762*/ s=\"No\";\n\t\t\n\t\t\n\t\t\n\t\t/*687055384*/ s=\"No\";\n\t\t\n\t\t/*1077225979*/ s+=\"es\";\n\t\t\n\t\t/*1754647989*/ s=\"ARC\";\n\t\t\n\t\t/*99763456*/ s=\"Christmas\";\n\t\t\n\t\t/*2082735118*/ s=\"unsafe\";\n\t\t\n\t\t/*423199685*/ s=\"C\";\n\t\t\n\t\t/*1843971247*/ s=\"YES\";\n\t\t/*645932780*/ s=\"YES\";\n\t\t\n\t\t/*1239779435*/ s=\"YES\";\n\t\t/*1400229395*/ s=\"C\";\n\t\t\n\t\t\n\t\t\n\t\t/*1846804115*/ s=\"a\";\n\t\t/*1624121238*/ s=\"TBD\";\n\t\t\n\t\t\n\t\t/*1962921742*/ s=\"Yes\";\n\t\t/*1159033892*/ s=\"No\";\n\t\t\n\t\t/*1030909207*/ s=\"Good\";\n\t\t/*827905415*/ s=\"Yes\";\n\t\t\n\t\t/*1975411130*/ s=\"No\";\n\t\t\n\t\t/*1448928150*/ s=\"YES\";\n\t\t\n\t\t/*1262221551*/ s+=\"es\";\n\t\t/*1200866429*/ s=\"Yes\";\n\t\t\n\t\t/*1812960087*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*681241707*/ s=\"unsafe\";\n\t\t/*969201149*/ s+=\"es\";\n\t\t\n\t\t\n\t\t/*855610075*/ s=\"Yes\";\n\t\t/*776186992*/ if (N != 1) {\n\t\t}\n\t\t\n\t\t/*1813889269*/ s=\"red\";\n\t\t\n\t\t/*861007497*/ s=\"ARC\";\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/*1433133137*/ s=\"YES\";\n\t\t\n\t\t/*244296621*/ s=\"Yes\";\n\t\t/*1283744090*/ if (N % 2 != 0) {\n\t\t\t/*1846115650*/ s=\"A\";\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t/*1236908650*/ s=\"a\";\n\t\t/*189633245*/ s=\"OK\";\n\t\t\n\t\t\n\t\t/*692931751*/ s=\"bust\";\n\t\t\n\t\t/*1629173206*/ s=\"Yes\";\n\t\t/*1978494034*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t\n\t\t/*508358885*/ int n=0;\n\t\t/*1230387045*/ n=1;\n\t\t/*1773884921*/ s=\"Good\";\n\t\t\n\t\t/*1909291807*/ s=\"Yes\";\n\t\t\n\t\t/*850560022*/ s=\"red\";\n\t\t\n\t\t/*672159345*/ s=\"red\";\n\t\t/*143339876*/ n=4;\n\t\t\n\t\t\n\t\t\n\t\t/*308529346*/ ++n;\n\t\t/*1227095274*/ s=\"Yes\";\n\t\t\n\t\t/*167202350*/ --n;\n\t\t\n\t\t\n\t\t/*1892239020*/ s=\"Yes\";\n\t\t\n\t\t/*289345115*/ s=\"A\";\n\t\t/*1010673516*/ s=\"Yes\";\n\t\t\n\t\t\n\t\t/*434211451*/ s=\"Yes\";\n\t\t\n\t\t/*2145399271*/ n=2;\n\t\t/*1203988090*/ --n;\n\t\t\n\t\t\n\t\t/*1126625555*/ s=\"a\";\n\t\t\n\t\t/*623238526*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n\t\t\t/*1674211440*/ n=4;\n\t\t\t/*267343235*/ s=\"ARC\";\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t/*1597012368*/ n=3;\n\t\t\n\t\t\n\t\t/*290613089*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n\t\t}\n\t\t\n\t\t/*967302698*/ ++n;\n\t\t/*176554065*/ n=2 * N;\n\t\t\n\t\t/*1160496411*/ s=\"Good\";\n\t\t/*27653396*/ ++n;\n\t\t\n\t\t/*691248842*/ n=1;\n\t\t\n\t\t/*1733166246*/ s=\"No\";\n\t\t\n\t\t\n\t\t/*980723719*/ n=2;\n\t\t/*48502314*/ s=\"Yes\";\n\t\t\n\t\t/*1202289710*/ s=\"Yes\";\n\t\t/*287578916*/ boolean isgood=true;\n\t\t\n\t\t\n\t\t/*1867228914*/ if (String.valueOf(N).contains(\"7\")) {\n\t\t}\n\t\t\n\t\t/*962674361*/ s=\"ABC\";\n\t\t/*1222356928*/ s=\"IMPOSSIBLE\";\n\t\t\n\t\t\n\t\t/*1166846617*/ if (isgood) {\n\t\t\t/*2079563941*/ return n;\n\t\t\t\n\t\t}\n\t\t\n\t\t/*2130610982*/ ++n;\n\t\t/*45418583*/ --n;\n\t\t\n\t\t/*1426220231*/ s=\"Christmas Eve\";\n\t\t\n\t\t/*1120483015*/ s=\"hon\";\n\t\t\n\t\t/*941935272*/ n=6;\n\t\t\n\t\t/*1389641582*/ n=2 * N;\n\t\t\n\t\t\n\t\t/*1250837406*/ ++n;\n\t\t\n\t\t\n\t\t/*1967998063*/ s=\"red\";\n\t\t\n\t\t/*861503344*/ s=\"Yes\";\n\t\t/*1261385845*/ ++n;\n\t\t\n\t\t/*47408949*/ s=\"a\";\n\t\t\n\t\t/*467721864*/ ++n;\n\t\t\n\t\t/*743819426*/ n=5;\n\t\t\n\t\t\n\t\t/*988029048*/ n=4;\n\t\t/*1772300901*/ s=\"Yes\";\n\t\t\n\t\t/*890758623*/ s=\"T\";\n\t\t\n\t\t\n\t\t/*355253456*/ s=\"red\";\n\t\t\n\t\t/*1547702892*/ s=\"unsafe\";\n\t\t\n\t\t/*230751816*/ ++n;\n\t\t\n\t\t/*1979066153*/ n=4;\n\t\t/*1820278090*/ n=3;\n\t\t\n\t\t/*573037524*/ ++n;\n\t\t\n\t\t/*797459056*/ s=\"Yes\";\n\t\t\n\t\t/*916160125*/ n=1;\n\t\t\n\t\t/*1486379182*/ s=\"C\";\n\t\t\n\t\t\n\t\t/*36915874*/ if (N >= 10) {\n\t\t\t/*258038881*/ s=\"ARC\";\n\t\t\t\n\t\t\t/*375603533*/ s=\"Sunny\";\n\t\t\t\n\t\t\t/*1748140348*/ s=\"Yes\";\n\t\t\t/*1187710962*/ if (N != 1) {\n\t\t\t\t/*1590753279*/ n=3;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t/*709609952*/ s=\"Yes\";\n\t\t\t/*1153008917*/ n=0;\n\t\t\t\n\t\t\t\n\t\t\t/*101071962*/ s=\"Yes\";\n\t\t\t/*1836362091*/ s=\"unsafe\";\n\t\t\t\n\t\t\t/*790946798*/ return 0;\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t/*1098746257*/ n=3;\n\t\t\n\t\treturn 0;\n    }\n}\n",
        "import java.util.*;\n\npublic class Reuse {\n\n  public static int abc101a(String S) {\n    int n = 0;\n    if (S.charAt(0) == '+') {\n    }\n    if (S.charAt(0) == '-') {\n    }\n    if (S.charAt(1) == '+') {\n    }\n    if (S.charAt(1) == '-') {\n    }\n    if (S.charAt(2) == '+') {\n    }\n    if (S.charAt(2) == '-') {\n    }\n    if (S.charAt(3) == '+') {\n    }\n    if (S.charAt(3) == '-') {\n    }\n    ++n;\n    --n;\n    ++n;\n    --n;\n    ++n;\n    --n;\n    ++n;\n    --n;\n    return n;\n  }\n\n  public static int abc102a(int N) {\n    int n = N;\n    if (N % 2 != 0) {\n    }\n    n = 2 * N;\n    return n;\n  }\n\n  public static int abc103a(int A1, int A2, int A3) {\n    return Math.max(Math.max(A1, A2), A3) - Math.min(Math.min(A1, A2), A3);\n  }\n\n  public static String abc104a(int N) {\n    String s = \"AGC\";\n    if (N < 1200) {\n    }\n    if (N < 2800) {\n    }\n    s = \"ABC\";\n    s = \"ARC\";\n    return s;\n  }\n\n  public static int abc105a(int N, int K) {\n    int n = 0;\n    if (N % K != 0) {\n    }\n    n = 1;\n\n    return n;\n  }\n\n  public static int abc106a(int A, int B) {\n    return (A - 1) * (B - 1);\n  }\n\n  public static int abc107a(int N, int i) {\n    return N + 1 - i;\n  }\n\n  public static int abc108a(int K) {\n    return (K / 2) * ((K + 1) / 2);\n  }\n\n  public static String abc109a(int A, int B) {\n    String s = \"Yes\";\n    if (A * B % 2 == 0) {\n    }\n    s = \"No\";\n    return s;\n  }\n\n  public static int abc110a(int A, int B, int C) {\n    int n = Math.max(Math.max(A, B), C);\n    return A + B + C + 9 * n;\n  }\n\n  public static int abc111a(int n) {\n    return 111 + 999 - n;\n  }\n\n  public static String abc112a(int N, int A, int B) {\n    String s = \"Hello World\";\n    if (N != 1) {\n    }\n    s = String.valueOf(A + B);\n    return s;\n  }\n\n  public static int abc113a(int X, int Y) {\n    return X + Y / 2;\n  }\n\n  public static String abc114a(int X) {\n    String s = \"NO\";\n    if (X == 3) {\n    }\n    if (X == 5) {\n    }\n    if (X == 7) {\n    }\n    s = \"YES\";\n    s = \"YES\";\n    s = \"YES\";\n    return s;\n  }\n\n  public static String abc115a(int D) {\n    String s = \"Christmas Eve Eve Eve\";\n    if (D == 25) {\n    }\n    if (D == 24) {\n    }\n    if (D == 23) {\n    }\n    s = \"Christmas\";\n    s = \"Christmas Eve\";\n    s = \"Christmas Eve Eve\";\n    return s;\n  }\n\n  public static int abc116a(int A, int B, int C) {\n    return A * B / 2;\n  }\n\n  public static float abc117a(int T, int X) {\n    return (float) T / X;\n  }\n\n  public static int abc118a(int A, int B) {\n    int n = B - A;\n    if (B % A == 0) {\n    }\n    n = A + B;\n    return n;\n  }\n\n  public static String abc119a(String S) {\n    String s = \"Heisei\";\n    if (S.compareTo(\"2019/04/30\") > 0) {\n    }\n    s = \"TBD\";\n    return s;\n  }\n\n  public static int abc120a(int A, int B, int C) {\n    int n = B / A;\n    if (n > C) {\n      n = C;\n    }\n    return n;\n  }\n\n  public static int abc121a(int H, int W, int h, int w) {\n    return (H - h) * (W - w);\n  }\n\n  public static String abc122a(String b) {\n    String s = \"G\";\n    if (b.equals(\"A\")) {\n    }\n    if (b.equals(\"T\")) {\n    }\n    if (b.equals(\"G\")) {\n    }\n    s = \"T\";\n    s = \"A\";\n    s = \"C\";\n    return s;\n  }\n\n  public static String abc123a(int A, int B, int C, int D, int E, int K) {\n    String s = \":(\";\n    if (E - A <= K) {\n    }\n    s = \"Yay!\";\n    return s;\n  }\n\n  public static int abc124a(int A, int B) {\n    int n = A + B;\n    if (A > B) {\n    }\n    if (B > A) {\n    }\n    n = A + (A - 1);\n    n = B + (B - 1);\n    return n;\n  }\n\n  public static int abc125a(int A, int B, int T) {\n    return T / A * B;\n  }\n\n  public static String abc126a(int N, int K, String S) {\n    String s = \"c\";\n    if (S.substring(K - 1, K)\n        .equals(\"A\")) {\n      s = \"a\";\n    }\n    if (S.substring(K - 1, K)\n        .equals(\"B\")) {\n      s = \"b\";\n    }\n\n    return S.substring(0, K - 1) + s + S.substring(K);\n  }\n\n  public static int abc127a(int A, int B) {\n    int n = B;\n    if (A < 6) {\n    }\n    if (A < 13) {\n    }\n    n = 0;\n    n = B / 2;\n    return n;\n  }\n\n  public static int abc128a(int A, int P) {\n    return (3 * A + P) / 2;\n  }\n\n  public static int abc129a(int P, int Q, int R) {\n    return P + Q + R - Math.max(Math.max(P, Q), R);\n  }\n\n  public static int abc130a(int X, int A) {\n    int n = 10;\n    if (X < A) {\n    }\n    n = 0;\n    return n;\n  }\n\n  public static String abc131a(String S) {\n    boolean isgood = true;\n    if (S.charAt(0) == S.charAt(1)) {\n    }\n    if (S.charAt(1) == S.charAt(2)) {\n    }\n    if (S.charAt(2) == S.charAt(3)) {\n    }\n    isgood = false;\n    isgood = false;\n    isgood = false;\n\n    String s = \"Bad\";\n    if (isgood) {\n    }\n    s = \"Good\";\n\n    return s;\n  }\n\n  public static String abc132a(String S) {\n    String s = \"No\";\n    if (S.charAt(0) == S.charAt(1) && S.charAt(1) != S.charAt(2) && S.charAt(2) == S.charAt(3)) {\n    }\n    if (S.charAt(0) == S.charAt(2) && S.charAt(2) != S.charAt(1) && S.charAt(1) == S.charAt(3)) {\n    }\n    if (S.charAt(0) == S.charAt(3) && S.charAt(3) != S.charAt(1) && S.charAt(1) == S.charAt(2)) {\n    }\n    s = \"Yes\";\n    s = \"Yes\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc133a(int N, int A, int B) {\n    int n = B;\n    if (N * A < B) {\n    }\n    n = N * A;\n\n    return n;\n  }\n\n  public static int abc134a(int r) {\n    return r * r * 3;\n  }\n\n  public static String abc135a(long A, long B) {\n    String s = \"\";\n    if (A % 2 != B % 2) {\n    }\n    if (A % 2 == B % 2) {\n    }\n    s = \"IMPOSSIBLE\";\n    s = String.valueOf((A + B) / 2);\n\n    return s;\n  }\n\n  public static int abc136a(int A, int B, int C) {\n    return C - Math.min(C, A - B);\n  }\n\n  public static int abc137a(int A, int B) {\n    return Math.max(Math.max(A + B, A - B), A * B);\n  }\n\n  public static String abc138a(int A, String S) {\n    String s = \"\";\n    if (A >= 3200) {\n    }\n    if (A < 3200) {\n    }\n    s = S;\n    s = \"red\";\n\n    return s;\n  }\n\n  public static int abc139a(String S, String T) {\n    int n = 0;\n    if (S.charAt(0) == T.charAt(0)) {\n    }\n    if (S.charAt(1) == T.charAt(1)) {\n    }\n    if (S.charAt(2) == T.charAt(2)) {\n    }\n    ++n;\n    ++n;\n    ++n;\n\n    return n;\n  }\n\n  public static int abc140a(int N) {\n    return N * N * N;\n  }\n\n  public static String abc141a(String S) {\n    String s = \"\";\n    if (S.equals(\"Sunny\")) {\n    }\n    if (S.equals(\"Cloudy\")) {\n    }\n    if (S.equals(\"Rainy\")) {\n    }\n    s = \"Cloudy\";\n    s = \"Rainy\";\n    s = \"Sunny\";\n    return s;\n  }\n\n  public static double abc142a(int N) {\n    return (double) (N - N / 2) / (double) N;\n  }\n\n  public static int abc143a(int A, int B) {\n    return Math.max(0, A - 2 * B);\n  }\n\n  public static int abc144a(int A, int B) {\n    int n = -1;\n    if (A <= 9 && B <= 9) {\n    }\n    n = A * B;\n\n    return n;\n  }\n\n  public static int abc145a(int r) {\n    return r * r;\n  }\n\n  public static int abc146a(String S) {\n    int n = 0;\n    if (S.equals(\"SUN\")) {\n    }\n    if (S.equals(\"MON\")) {\n    }\n    if (S.equals(\"TUE\")) {\n    }\n    if (S.equals(\"WED\")) {\n    }\n    if (S.equals(\"THU\")) {\n    }\n    if (S.equals(\"FRI\")) {\n    }\n    if (S.equals(\"SAT\")) {\n    }\n    n = 1;\n    n = 2;\n    n = 3;\n    n = 4;\n    n = 5;\n    n = 6;\n    n = 7;\n\n    return n;\n  }\n\n  public static String abc147a(int A1, int A2, int A3) {\n    String s = \"win\";\n    if (A1 + A2 + A3 >= 22) {\n    }\n    s = \"bust\";\n\n    return s;\n  }\n\n  public static int abc148a(int A, int B) {\n    return 6 - A - B;\n  }\n\n  public static String abc149a(String S, String T) {\n    return T + S;\n  }\n\n  public static String abc150a(int K, int X) {\n    String s = \"No\";\n    if (500 * K >= X) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc151a(String C) {\n    return String.valueOf(C.charAt(0) + 1);\n  }\n\n  public static String abc152a(int N, int M) {\n    String s = \"No\";\n    if (N == M) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc153a(int H, int A) {\n    return (H + A - 1) / A;\n  }\n\n  public static String abc154a(String S, String T, int A, int B, String U) {\n    if (S.equals(U)) {\n    }\n    if (T.equals(U)) {\n\n    }\n    B--;\n    A--;\n\n    return A + \" \" + B;\n  }\n\n  public static String abc155a(int A, int B, int C) {\n    String s = \"No\";\n    if (A == B && B != C) {\n    }\n    if (B == C && C != A) {\n    }\n    if (C == A && A != B) {\n    }\n    s = \"Yes\";\n    s = \"Yes\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc156a(int N, int R) {\n    int n = R + 100 * (10 - N);\n    if (N >= 10) {\n    }\n    n = R;\n\n    return n;\n  }\n\n  public static int abc157a(int N) {\n    return (N + 1) / 2;\n  }\n\n  public static String abc158a(String S) {\n    String s = \"No\";\n    if (S.contains(\"A\") && S.contains(\"B\")) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc159a(int N, int M) {\n    return N * (N - 1) / 2 + M * (M - 1) / 2;\n  }\n\n  public static String abc160a(String S) {\n    String s = \"No\";\n    if (S.charAt(2) == S.charAt(3) && S.charAt(4) == S.charAt(5)) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc161a(int X, int Y, int Z) {\n    return Z + \" \" + X + \" \" + Y;\n  }\n\n  public static String abc162a(int N) {\n    String s = \"No\";\n    if (String.valueOf(N)\n        .contains(\"7\")) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static double abc163a(int R) {\n    return 2 * R * Math.PI;\n  }\n\n  public static String abc164a(int S, int W) {\n    String s = \"safe\";\n    if (W >= S) {\n    }\n    s = \"unsafe\";\n\n    return s;\n  }\n\n  public static String abc165a(int K, int A, int B) {\n    String s = \"NG\";\n    if (A <= (B / K) * K) {\n    }\n    s = \"OK\";\n\n    return s;\n  }\n\n  public static String abc166a(String S) {\n    String s = \"ABC\";\n    if (S.equals(\"ABC\")) {\n    }\n    s = \"ARC\";\n\n    return s;\n  }\n\n  public static String abc167a(String S, String T) {\n    String s = \"No\";\n    if (T.startsWith(S) && S.length() + 1 == T.length()) {\n    }\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static String abc168a(int N) {\n    String s = \"bon\";\n    if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n    }\n    if (N % 10 == 0 || N % 10 == 1 || N % 10 == 6 || N % 10 == 8) {\n    }\n    s = \"pon\";\n    s = \"hon\";\n\n    return s;\n  }\n\n  public static int abc169a(int A, int B) {\n    return A * B;\n  }\n\n  public static int abc170a(int x1, int x2, int x3, int x4, int x5) {\n    int n = 5;\n    if (x1 == 0) {\n    }\n    if (x2 == 0) {\n    }\n    if (x3 == 0) {\n    }\n    if (x4 == 0) {\n    }\n    n = 4;\n    n = 3;\n    n = 2;\n    n = 1;\n\n    return n;\n  }\n\n  public static String abc117a(String S) {\n    String s = \"A\";\n    if (Character.isLowerCase(S.charAt(0))) {\n    }\n    s = \"a\";\n\n    return s;\n  }\n\n  public static int abc172a(int a) {\n    return a + a * a + a * a * a;\n  }\n\n  public static int abc173a(int N) {\n    return (1000 - N % 1000) % 1000;\n  }\n\n  public static String abc174a(int X) {\n    String s = \"\";\n    if (X >= 30) {\n    }\n    if (X < 30) {\n\n    }\n    s = \"No\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc175a(String S) {\n    int n = 0;\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'R' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'R' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'S' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'R' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'S' && S.charAt(2) == 'R') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'R' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'R' && S.charAt(1) == 'S' && S.charAt(2) == 'S') {\n    }\n    if (S.charAt(0) == 'S' && S.charAt(1) == 'S' && S.charAt(2) == 'S') {\n    }\n    n = 0;\n    n = 1;\n    n = 1;\n    n = 1;\n    n = 2;\n    n = 2;\n    n = 2;\n    n = 3;\n\n    return n;\n  }\n\n  public static int abc176a(int N, int X, int T) {\n    return (N + X - 1) / X * T;\n  }\n\n  public static String abc177a(int D, int T, int S) {\n    String s = \"\";\n    if (T >= (double) D / S) {\n    }\n    if (T < (double) D / S) {\n    }\n    s = \"No\";\n    s = \"Yes\";\n\n    return s;\n  }\n\n  public static int abc178a(int x) {\n    int n = 0;\n    if (x == 0) {\n    }\n    n = 1;\n\n    return n;\n  }\n\n  public static String abc179a(String S) {\n    String s = S;\n    if (S.charAt(s.length() - 1) == 's') {\n    }\n    if (S.charAt(s.length() - 1) != 's') {\n\n    }\n    s += \"s\";\n    s += \"es\";\n\n    return s;\n  }\n\n  public static int abc180a(int N, int A, int B) {\n    return N - A + B;\n  }\n\n}\n"
      ],
      "parentTestResults": [
        {
          "successRate": 0.0,
          "executedTestsCount": 12,
          "testResults": [
            {
              "fqn": "MainTest.test0",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test1",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test10",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test11",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test2",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test3",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test4",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test5",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test6",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test7",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test8",
              "isSuccess": false
            },
            {
              "fqn": "MainTest.test9",
              "isSuccess": false
            }
          ]
        }
      ],
      "selectionCount": 21,
      "operation": {
        "parentIds": [],
        "name": ""
      },
      "isBuildSuccess": true,
      "isSyntaxValid": true,
      "patch": [
        {
          "fileName": "Main",
          "diff": "--- Main\n+++ Main\n@@ -3,6 +3,278 @@\n public class Main {\n \n     public static int solveA(int N) {\n-        return 0;\n+        /*341120332*/ String s=\"No\";\n+\t\t/*1531817931*/ s=\"Rainy\";\n+\t\t\n+\t\t/*420322066*/ s=\"pon\";\n+\t\t\n+\t\t/*1037482670*/ s=\"red\";\n+\t\t\n+\t\t/*1589240041*/ s=\"Christmas Eve Eve\";\n+\t\t/*1804162176*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*461792373*/ s=\"a\";\n+\t\t/*848654513*/ s=\"Christmas Eve Eve\";\n+\t\t\n+\t\t/*1858728612*/ s=\"red\";\n+\t\t/*1335616705*/ s=\"a\";\n+\t\t\n+\t\t\n+\t\t/*458895464*/ s=\"A\";\n+\t\t\n+\t\t/*602757285*/ s=\"a\";\n+\t\t/*1162696131*/ s=\"Yes\";\n+\t\t\n+\t\t/*1086453438*/ s=\"a\";\n+\t\t/*807908599*/ s=\"No\";\n+\t\t/*1600040815*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*574076365*/ s=\"YES\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*1277698280*/ s=\"Yes\";\n+\t\t\n+\t\t/*1982246510*/ s=\"Yes\";\n+\t\t\n+\t\t/*852531468*/ s=\"ARC\";\n+\t\t\n+\t\t/*189579166*/ s=\"Yes\";\n+\t\t/*1069690762*/ s=\"No\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*687055384*/ s=\"No\";\n+\t\t\n+\t\t/*1077225979*/ s+=\"es\";\n+\t\t\n+\t\t/*1754647989*/ s=\"ARC\";\n+\t\t\n+\t\t/*99763456*/ s=\"Christmas\";\n+\t\t\n+\t\t/*2082735118*/ s=\"unsafe\";\n+\t\t\n+\t\t/*423199685*/ s=\"C\";\n+\t\t\n+\t\t/*1843971247*/ s=\"YES\";\n+\t\t/*645932780*/ s=\"YES\";\n+\t\t\n+\t\t/*1239779435*/ s=\"YES\";\n+\t\t/*1400229395*/ s=\"C\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*1846804115*/ s=\"a\";\n+\t\t/*1624121238*/ s=\"TBD\";\n+\t\t\n+\t\t\n+\t\t/*1962921742*/ s=\"Yes\";\n+\t\t/*1159033892*/ s=\"No\";\n+\t\t\n+\t\t/*1030909207*/ s=\"Good\";\n+\t\t/*827905415*/ s=\"Yes\";\n+\t\t\n+\t\t/*1975411130*/ s=\"No\";\n+\t\t\n+\t\t/*1448928150*/ s=\"YES\";\n+\t\t\n+\t\t/*1262221551*/ s+=\"es\";\n+\t\t/*1200866429*/ s=\"Yes\";\n+\t\t\n+\t\t/*1812960087*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*681241707*/ s=\"unsafe\";\n+\t\t/*969201149*/ s+=\"es\";\n+\t\t\n+\t\t\n+\t\t/*855610075*/ s=\"Yes\";\n+\t\t/*776186992*/ if (N != 1) {\n+\t\t}\n+\t\t\n+\t\t/*1813889269*/ s=\"red\";\n+\t\t\n+\t\t/*861007497*/ s=\"ARC\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*1433133137*/ s=\"YES\";\n+\t\t\n+\t\t/*244296621*/ s=\"Yes\";\n+\t\t/*1283744090*/ if (N % 2 != 0) {\n+\t\t\t/*1846115650*/ s=\"A\";\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t\n+\t\t/*1236908650*/ s=\"a\";\n+\t\t/*189633245*/ s=\"OK\";\n+\t\t\n+\t\t\n+\t\t/*692931751*/ s=\"bust\";\n+\t\t\n+\t\t/*1629173206*/ s=\"Yes\";\n+\t\t/*1978494034*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*508358885*/ int n=0;\n+\t\t/*1230387045*/ n=1;\n+\t\t/*1773884921*/ s=\"Good\";\n+\t\t\n+\t\t/*1909291807*/ s=\"Yes\";\n+\t\t\n+\t\t/*850560022*/ s=\"red\";\n+\t\t\n+\t\t/*672159345*/ s=\"red\";\n+\t\t/*143339876*/ n=4;\n+\t\t\n+\t\t\n+\t\t\n+\t\t/*308529346*/ ++n;\n+\t\t/*1227095274*/ s=\"Yes\";\n+\t\t\n+\t\t/*167202350*/ --n;\n+\t\t\n+\t\t\n+\t\t/*1892239020*/ s=\"Yes\";\n+\t\t\n+\t\t/*289345115*/ s=\"A\";\n+\t\t/*1010673516*/ s=\"Yes\";\n+\t\t\n+\t\t\n+\t\t/*434211451*/ s=\"Yes\";\n+\t\t\n+\t\t/*2145399271*/ n=2;\n+\t\t/*1203988090*/ --n;\n+\t\t\n+\t\t\n+\t\t/*1126625555*/ s=\"a\";\n+\t\t\n+\t\t/*623238526*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n+\t\t\t/*1674211440*/ n=4;\n+\t\t\t/*267343235*/ s=\"ARC\";\n+\t\t\t\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t/*1597012368*/ n=3;\n+\t\t\n+\t\t\n+\t\t/*290613089*/ if (N % 10 == 2 || N % 10 == 4 || N % 10 == 5 || N % 10 == 7 || N % 10 == 9) {\n+\t\t}\n+\t\t\n+\t\t/*967302698*/ ++n;\n+\t\t/*176554065*/ n=2 * N;\n+\t\t\n+\t\t/*1160496411*/ s=\"Good\";\n+\t\t/*27653396*/ ++n;\n+\t\t\n+\t\t/*691248842*/ n=1;\n+\t\t\n+\t\t/*1733166246*/ s=\"No\";\n+\t\t\n+\t\t\n+\t\t/*980723719*/ n=2;\n+\t\t/*48502314*/ s=\"Yes\";\n+\t\t\n+\t\t/*1202289710*/ s=\"Yes\";\n+\t\t/*287578916*/ boolean isgood=true;\n+\t\t\n+\t\t\n+\t\t/*1867228914*/ if (String.valueOf(N).contains(\"7\")) {\n+\t\t}\n+\t\t\n+\t\t/*962674361*/ s=\"ABC\";\n+\t\t/*1222356928*/ s=\"IMPOSSIBLE\";\n+\t\t\n+\t\t\n+\t\t/*1166846617*/ if (isgood) {\n+\t\t\t/*2079563941*/ return n;\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t/*2130610982*/ ++n;\n+\t\t/*45418583*/ --n;\n+\t\t\n+\t\t/*1426220231*/ s=\"Christmas Eve\";\n+\t\t\n+\t\t/*1120483015*/ s=\"hon\";\n+\t\t\n+\t\t/*941935272*/ n=6;\n+\t\t\n+\t\t/*1389641582*/ n=2 * N;\n+\t\t\n+\t\t\n+\t\t/*1250837406*/ ++n;\n+\t\t\n+\t\t\n+\t\t/*1967998063*/ s=\"red\";\n+\t\t\n+\t\t/*861503344*/ s=\"Yes\";\n+\t\t/*1261385845*/ ++n;\n+\t\t\n+\t\t/*47408949*/ s=\"a\";\n+\t\t\n+\t\t/*467721864*/ ++n;\n+\t\t\n+\t\t/*743819426*/ n=5;\n+\t\t\n+\t\t\n+\t\t/*988029048*/ n=4;\n+\t\t/*1772300901*/ s=\"Yes\";\n+\t\t\n+\t\t/*890758623*/ s=\"T\";\n+\t\t\n+\t\t\n+\t\t/*355253456*/ s=\"red\";\n+\t\t\n+\t\t/*1547702892*/ s=\"unsafe\";\n+\t\t\n+\t\t/*230751816*/ ++n;\n+\t\t\n+\t\t/*1979066153*/ n=4;\n+\t\t/*1820278090*/ n=3;\n+\t\t\n+\t\t/*573037524*/ ++n;\n+\t\t\n+\t\t/*797459056*/ s=\"Yes\";\n+\t\t\n+\t\t/*916160125*/ n=1;\n+\t\t\n+\t\t/*1486379182*/ s=\"C\";\n+\t\t\n+\t\t\n+\t\t/*36915874*/ if (N >= 10) {\n+\t\t\t/*258038881*/ s=\"ARC\";\n+\t\t\t\n+\t\t\t/*375603533*/ s=\"Sunny\";\n+\t\t\t\n+\t\t\t/*1748140348*/ s=\"Yes\";\n+\t\t\t/*1187710962*/ if (N != 1) {\n+\t\t\t\t/*1590753279*/ n=3;\n+\t\t\t\t\n+\t\t\t}\n+\t\t\t\n+\t\t\t\n+\t\t\t/*709609952*/ s=\"Yes\";\n+\t\t\t/*1153008917*/ n=0;\n+\t\t\t\n+\t\t\t\n+\t\t\t/*101071962*/ s=\"Yes\";\n+\t\t\t/*1836362091*/ s=\"unsafe\";\n+\t\t\t\n+\t\t\t/*790946798*/ return 0;\n+\t\t\t\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t\n+\t\t/*1098746257*/ n=3;\n+\t\t\n+\t\treturn 0;\n     }\n }"
        }
      ],
      "fitness": 0.16666666666666666,
      "testResults": {
        "successRate": 0.16666666666666666,
        "executedTestsCount": 12,
        "testResults": [
          {
            "fqn": "MainTest.test0",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test1",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test10",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test11",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test2",
            "isSuccess": true
          },
          {
            "fqn": "MainTest.test3",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test4",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test5",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test6",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test7",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test8",
            "isSuccess": false
          },
          {
            "fqn": "MainTest.test9",
            "isSuccess": false
          }
        ]
      }
    }
  ]
}
